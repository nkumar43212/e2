// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: e2_api.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "e2_api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace E2 {

namespace {

const ::google::protobuf::Descriptor* ConfigurationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConfigurationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConfigurationReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConfigurationReply_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ReturnCode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_e2_5fapi_2eproto() {
  protobuf_AddDesc_e2_5fapi_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "e2_api.proto");
  GOOGLE_CHECK(file != NULL);
  ConfigurationRequest_descriptor_ = file->message_type(0);
  static const int ConfigurationRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationRequest, mgmt_ip_),
  };
  ConfigurationRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConfigurationRequest_descriptor_,
      ConfigurationRequest::default_instance_,
      ConfigurationRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ConfigurationRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationRequest, _is_default_instance_));
  ConfigurationReply_descriptor_ = file->message_type(1);
  static const int ConfigurationReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationReply, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationReply, code_str_),
  };
  ConfigurationReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConfigurationReply_descriptor_,
      ConfigurationReply::default_instance_,
      ConfigurationReply_offsets_,
      -1,
      -1,
      -1,
      sizeof(ConfigurationReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationReply, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationReply, _is_default_instance_));
  ReturnCode_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_e2_5fapi_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConfigurationRequest_descriptor_, &ConfigurationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConfigurationReply_descriptor_, &ConfigurationReply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_e2_5fapi_2eproto() {
  delete ConfigurationRequest::default_instance_;
  delete ConfigurationRequest_reflection_;
  delete ConfigurationReply::default_instance_;
  delete ConfigurationReply_reflection_;
}

void protobuf_AddDesc_e2_5fapi_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014e2_api.proto\022\002E2\"5\n\024ConfigurationReque"
    "st\022\014\n\004name\030\001 \001(\t\022\017\n\007mgmt_ip\030\002 \001(\t\"D\n\022Con"
    "figurationReply\022\034\n\004code\030\001 \001(\0162\016.E2.Retur"
    "nCode\022\020\n\010code_str\030\002 \001(\t*,\n\nReturnCode\022\013\n"
    "\007SUCCESS\020\000\022\021\n\rUNKNOWN_ERROR\020\0012\213\001\n\002E2\022@\n\n"
    "addElement\022\030.E2.ConfigurationRequest\032\026.E"
    "2.ConfigurationReply\"\000\022C\n\rremoveElement\022"
    "\030.E2.ConfigurationRequest\032\026.E2.Configura"
    "tionReply\"\000b\006proto3", 339);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "e2_api.proto", &protobuf_RegisterTypes);
  ConfigurationRequest::default_instance_ = new ConfigurationRequest();
  ConfigurationReply::default_instance_ = new ConfigurationReply();
  ConfigurationRequest::default_instance_->InitAsDefaultInstance();
  ConfigurationReply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_e2_5fapi_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_e2_5fapi_2eproto {
  StaticDescriptorInitializer_e2_5fapi_2eproto() {
    protobuf_AddDesc_e2_5fapi_2eproto();
  }
} static_descriptor_initializer_e2_5fapi_2eproto_;
const ::google::protobuf::EnumDescriptor* ReturnCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReturnCode_descriptor_;
}
bool ReturnCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int ConfigurationRequest::kNameFieldNumber;
const int ConfigurationRequest::kMgmtIpFieldNumber;
#endif  // !_MSC_VER

ConfigurationRequest::ConfigurationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:E2.ConfigurationRequest)
}

void ConfigurationRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ConfigurationRequest::ConfigurationRequest(const ConfigurationRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:E2.ConfigurationRequest)
}

void ConfigurationRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mgmt_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ConfigurationRequest::~ConfigurationRequest() {
  // @@protoc_insertion_point(destructor:E2.ConfigurationRequest)
  SharedDtor();
}

void ConfigurationRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mgmt_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ConfigurationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigurationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConfigurationRequest_descriptor_;
}

const ConfigurationRequest& ConfigurationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_e2_5fapi_2eproto();
  return *default_instance_;
}

ConfigurationRequest* ConfigurationRequest::default_instance_ = NULL;

ConfigurationRequest* ConfigurationRequest::New(::google::protobuf::Arena* arena) const {
  ConfigurationRequest* n = new ConfigurationRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigurationRequest::Clear() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mgmt_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ConfigurationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E2.ConfigurationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "E2.ConfigurationRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mgmt_ip;
        break;
      }

      // optional string mgmt_ip = 2;
      case 2: {
        if (tag == 18) {
         parse_mgmt_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mgmt_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mgmt_ip().data(), this->mgmt_ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "E2.ConfigurationRequest.mgmt_ip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E2.ConfigurationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E2.ConfigurationRequest)
  return false;
#undef DO_
}

void ConfigurationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E2.ConfigurationRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.ConfigurationRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string mgmt_ip = 2;
  if (this->mgmt_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mgmt_ip().data(), this->mgmt_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.ConfigurationRequest.mgmt_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mgmt_ip(), output);
  }

  // @@protoc_insertion_point(serialize_end:E2.ConfigurationRequest)
}

::google::protobuf::uint8* ConfigurationRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:E2.ConfigurationRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.ConfigurationRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string mgmt_ip = 2;
  if (this->mgmt_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mgmt_ip().data(), this->mgmt_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.ConfigurationRequest.mgmt_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mgmt_ip(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:E2.ConfigurationRequest)
  return target;
}

int ConfigurationRequest::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string mgmt_ip = 2;
  if (this->mgmt_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mgmt_ip());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigurationRequest::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ConfigurationRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigurationRequest>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ConfigurationRequest::MergeFrom(const ConfigurationRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.mgmt_ip().size() > 0) {

    mgmt_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mgmt_ip_);
  }
}

void ConfigurationRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigurationRequest::CopyFrom(const ConfigurationRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigurationRequest::IsInitialized() const {

  return true;
}

void ConfigurationRequest::Swap(ConfigurationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigurationRequest::InternalSwap(ConfigurationRequest* other) {
  name_.Swap(&other->name_);
  mgmt_ip_.Swap(&other->mgmt_ip_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigurationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConfigurationRequest_descriptor_;
  metadata.reflection = ConfigurationRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigurationRequest

// optional string name = 1;
void ConfigurationRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ConfigurationRequest::name() const {
  // @@protoc_insertion_point(field_get:E2.ConfigurationRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConfigurationRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:E2.ConfigurationRequest.name)
}
 void ConfigurationRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:E2.ConfigurationRequest.name)
}
 void ConfigurationRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:E2.ConfigurationRequest.name)
}
 ::std::string* ConfigurationRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:E2.ConfigurationRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ConfigurationRequest::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConfigurationRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:E2.ConfigurationRequest.name)
}

// optional string mgmt_ip = 2;
void ConfigurationRequest::clear_mgmt_ip() {
  mgmt_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ConfigurationRequest::mgmt_ip() const {
  // @@protoc_insertion_point(field_get:E2.ConfigurationRequest.mgmt_ip)
  return mgmt_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConfigurationRequest::set_mgmt_ip(const ::std::string& value) {
  
  mgmt_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:E2.ConfigurationRequest.mgmt_ip)
}
 void ConfigurationRequest::set_mgmt_ip(const char* value) {
  
  mgmt_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:E2.ConfigurationRequest.mgmt_ip)
}
 void ConfigurationRequest::set_mgmt_ip(const char* value, size_t size) {
  
  mgmt_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:E2.ConfigurationRequest.mgmt_ip)
}
 ::std::string* ConfigurationRequest::mutable_mgmt_ip() {
  
  // @@protoc_insertion_point(field_mutable:E2.ConfigurationRequest.mgmt_ip)
  return mgmt_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ConfigurationRequest::release_mgmt_ip() {
  
  return mgmt_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConfigurationRequest::set_allocated_mgmt_ip(::std::string* mgmt_ip) {
  if (mgmt_ip != NULL) {
    
  } else {
    
  }
  mgmt_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mgmt_ip);
  // @@protoc_insertion_point(field_set_allocated:E2.ConfigurationRequest.mgmt_ip)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ConfigurationReply::kCodeFieldNumber;
const int ConfigurationReply::kCodeStrFieldNumber;
#endif  // !_MSC_VER

ConfigurationReply::ConfigurationReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:E2.ConfigurationReply)
}

void ConfigurationReply::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ConfigurationReply::ConfigurationReply(const ConfigurationReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:E2.ConfigurationReply)
}

void ConfigurationReply::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  code_ = 0;
  code_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ConfigurationReply::~ConfigurationReply() {
  // @@protoc_insertion_point(destructor:E2.ConfigurationReply)
  SharedDtor();
}

void ConfigurationReply::SharedDtor() {
  code_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ConfigurationReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigurationReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConfigurationReply_descriptor_;
}

const ConfigurationReply& ConfigurationReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_e2_5fapi_2eproto();
  return *default_instance_;
}

ConfigurationReply* ConfigurationReply::default_instance_ = NULL;

ConfigurationReply* ConfigurationReply::New(::google::protobuf::Arena* arena) const {
  ConfigurationReply* n = new ConfigurationReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigurationReply::Clear() {
  code_ = 0;
  code_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ConfigurationReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E2.ConfigurationReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .E2.ReturnCode code = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_code(static_cast< ::E2::ReturnCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_code_str;
        break;
      }

      // optional string code_str = 2;
      case 2: {
        if (tag == 18) {
         parse_code_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code_str().data(), this->code_str().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "E2.ConfigurationReply.code_str"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E2.ConfigurationReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E2.ConfigurationReply)
  return false;
#undef DO_
}

void ConfigurationReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E2.ConfigurationReply)
  // optional .E2.ReturnCode code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // optional string code_str = 2;
  if (this->code_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code_str().data(), this->code_str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.ConfigurationReply.code_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code_str(), output);
  }

  // @@protoc_insertion_point(serialize_end:E2.ConfigurationReply)
}

::google::protobuf::uint8* ConfigurationReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:E2.ConfigurationReply)
  // optional .E2.ReturnCode code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // optional string code_str = 2;
  if (this->code_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code_str().data(), this->code_str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.ConfigurationReply.code_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code_str(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:E2.ConfigurationReply)
  return target;
}

int ConfigurationReply::ByteSize() const {
  int total_size = 0;

  // optional .E2.ReturnCode code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  // optional string code_str = 2;
  if (this->code_str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code_str());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigurationReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ConfigurationReply* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigurationReply>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ConfigurationReply::MergeFrom(const ConfigurationReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.code_str().size() > 0) {

    code_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_str_);
  }
}

void ConfigurationReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigurationReply::CopyFrom(const ConfigurationReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigurationReply::IsInitialized() const {

  return true;
}

void ConfigurationReply::Swap(ConfigurationReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigurationReply::InternalSwap(ConfigurationReply* other) {
  std::swap(code_, other->code_);
  code_str_.Swap(&other->code_str_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigurationReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConfigurationReply_descriptor_;
  metadata.reflection = ConfigurationReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigurationReply

// optional .E2.ReturnCode code = 1;
void ConfigurationReply::clear_code() {
  code_ = 0;
}
 ::E2::ReturnCode ConfigurationReply::code() const {
  // @@protoc_insertion_point(field_get:E2.ConfigurationReply.code)
  return static_cast< ::E2::ReturnCode >(code_);
}
 void ConfigurationReply::set_code(::E2::ReturnCode value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:E2.ConfigurationReply.code)
}

// optional string code_str = 2;
void ConfigurationReply::clear_code_str() {
  code_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ConfigurationReply::code_str() const {
  // @@protoc_insertion_point(field_get:E2.ConfigurationReply.code_str)
  return code_str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConfigurationReply::set_code_str(const ::std::string& value) {
  
  code_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:E2.ConfigurationReply.code_str)
}
 void ConfigurationReply::set_code_str(const char* value) {
  
  code_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:E2.ConfigurationReply.code_str)
}
 void ConfigurationReply::set_code_str(const char* value, size_t size) {
  
  code_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:E2.ConfigurationReply.code_str)
}
 ::std::string* ConfigurationReply::mutable_code_str() {
  
  // @@protoc_insertion_point(field_mutable:E2.ConfigurationReply.code_str)
  return code_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ConfigurationReply::release_code_str() {
  
  return code_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConfigurationReply::set_allocated_code_str(::std::string* code_str) {
  if (code_str != NULL) {
    
  } else {
    
  }
  code_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code_str);
  // @@protoc_insertion_point(field_set_allocated:E2.ConfigurationReply.code_str)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace E2

// @@protoc_insertion_point(global_scope)
