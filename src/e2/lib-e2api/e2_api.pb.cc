// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: e2_api.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "e2_api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace E2 {

namespace {

const ::google::protobuf::Descriptor* NetworkElement_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NetworkElement_reflection_ = NULL;
const ::google::protobuf::Descriptor* NetworkElementList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NetworkElementList_reflection_ = NULL;
const ::google::protobuf::Descriptor* FabricLink_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FabricLink_reflection_ = NULL;
const ::google::protobuf::Descriptor* FabricLinkList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FabricLinkList_reflection_ = NULL;
const ::google::protobuf::Descriptor* NetworkElementOpState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NetworkElementOpState_reflection_ = NULL;
const ::google::protobuf::Descriptor* NetworkElementProperty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NetworkElementProperty_reflection_ = NULL;
struct NetworkElementPropertyOneofInstance {
  double double_value_;
  ::google::protobuf::int64 int_value_;
  ::google::protobuf::uint64 uint_value_;
  ::google::protobuf::int64 sint_value_;
  bool bool_value_;
  ::google::protobuf::internal::ArenaStringPtr str_value_;
  ::google::protobuf::internal::ArenaStringPtr bytes_value_;
}* NetworkElementProperty_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* NetworkElementOpStateList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NetworkElementOpStateList_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConfigurationReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConfigurationReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServiceEndpoint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceEndpoint_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServiceEndpointList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceEndpointList_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServiceBinding_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceBinding_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* NetworkElementType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ReturnCode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_e2_5fapi_2eproto() {
  protobuf_AddDesc_e2_5fapi_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "e2_api.proto");
  GOOGLE_CHECK(file != NULL);
  NetworkElement_descriptor_ = file->message_type(0);
  static const int NetworkElement_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElement, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElement, mgmt_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElement, persona_),
  };
  NetworkElement_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NetworkElement_descriptor_,
      NetworkElement::default_instance_,
      NetworkElement_offsets_,
      -1,
      -1,
      -1,
      sizeof(NetworkElement),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElement, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElement, _is_default_instance_));
  NetworkElementList_descriptor_ = file->message_type(1);
  static const int NetworkElementList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElementList, list_),
  };
  NetworkElementList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NetworkElementList_descriptor_,
      NetworkElementList::default_instance_,
      NetworkElementList_offsets_,
      -1,
      -1,
      -1,
      sizeof(NetworkElementList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElementList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElementList, _is_default_instance_));
  FabricLink_descriptor_ = file->message_type(2);
  static const int FabricLink_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FabricLink, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FabricLink, endpoint_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FabricLink, endpoint_2_),
  };
  FabricLink_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FabricLink_descriptor_,
      FabricLink::default_instance_,
      FabricLink_offsets_,
      -1,
      -1,
      -1,
      sizeof(FabricLink),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FabricLink, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FabricLink, _is_default_instance_));
  FabricLinkList_descriptor_ = file->message_type(3);
  static const int FabricLinkList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FabricLinkList, list_),
  };
  FabricLinkList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FabricLinkList_descriptor_,
      FabricLinkList::default_instance_,
      FabricLinkList_offsets_,
      -1,
      -1,
      -1,
      sizeof(FabricLinkList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FabricLinkList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FabricLinkList, _is_default_instance_));
  NetworkElementOpState_descriptor_ = file->message_type(4);
  static const int NetworkElementOpState_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElementOpState, element_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElementOpState, properties_),
  };
  NetworkElementOpState_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NetworkElementOpState_descriptor_,
      NetworkElementOpState::default_instance_,
      NetworkElementOpState_offsets_,
      -1,
      -1,
      -1,
      sizeof(NetworkElementOpState),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElementOpState, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElementOpState, _is_default_instance_));
  NetworkElementProperty_descriptor_ = file->message_type(5);
  static const int NetworkElementProperty_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElementProperty, name_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(NetworkElementProperty_default_oneof_instance_, double_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(NetworkElementProperty_default_oneof_instance_, int_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(NetworkElementProperty_default_oneof_instance_, uint_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(NetworkElementProperty_default_oneof_instance_, sint_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(NetworkElementProperty_default_oneof_instance_, bool_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(NetworkElementProperty_default_oneof_instance_, str_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(NetworkElementProperty_default_oneof_instance_, bytes_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElementProperty, value_),
  };
  NetworkElementProperty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NetworkElementProperty_descriptor_,
      NetworkElementProperty::default_instance_,
      NetworkElementProperty_offsets_,
      -1,
      -1,
      -1,
      NetworkElementProperty_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElementProperty, _oneof_case_[0]),
      sizeof(NetworkElementProperty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElementProperty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElementProperty, _is_default_instance_));
  NetworkElementOpStateList_descriptor_ = file->message_type(6);
  static const int NetworkElementOpStateList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElementOpStateList, opstate_),
  };
  NetworkElementOpStateList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NetworkElementOpStateList_descriptor_,
      NetworkElementOpStateList::default_instance_,
      NetworkElementOpStateList_offsets_,
      -1,
      -1,
      -1,
      sizeof(NetworkElementOpStateList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElementOpStateList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetworkElementOpStateList, _is_default_instance_));
  ConfigurationReply_descriptor_ = file->message_type(7);
  static const int ConfigurationReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationReply, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationReply, code_str_),
  };
  ConfigurationReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConfigurationReply_descriptor_,
      ConfigurationReply::default_instance_,
      ConfigurationReply_offsets_,
      -1,
      -1,
      -1,
      sizeof(ConfigurationReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationReply, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigurationReply, _is_default_instance_));
  ServiceEndpoint_descriptor_ = file->message_type(8);
  static const int ServiceEndpoint_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceEndpoint, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceEndpoint, vlan_identifier_),
  };
  ServiceEndpoint_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServiceEndpoint_descriptor_,
      ServiceEndpoint::default_instance_,
      ServiceEndpoint_offsets_,
      -1,
      -1,
      -1,
      sizeof(ServiceEndpoint),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceEndpoint, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceEndpoint, _is_default_instance_));
  ServiceEndpointList_descriptor_ = file->message_type(9);
  static const int ServiceEndpointList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceEndpointList, list_),
  };
  ServiceEndpointList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServiceEndpointList_descriptor_,
      ServiceEndpointList::default_instance_,
      ServiceEndpointList_offsets_,
      -1,
      -1,
      -1,
      sizeof(ServiceEndpointList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceEndpointList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceEndpointList, _is_default_instance_));
  ServiceBinding_descriptor_ = file->message_type(10);
  static const int ServiceBinding_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceBinding, service_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceBinding, access_element_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceBinding, access_port_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceBinding, edge_element_list_),
  };
  ServiceBinding_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServiceBinding_descriptor_,
      ServiceBinding::default_instance_,
      ServiceBinding_offsets_,
      -1,
      -1,
      -1,
      sizeof(ServiceBinding),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceBinding, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceBinding, _is_default_instance_));
  NetworkElementType_descriptor_ = file->enum_type(0);
  ReturnCode_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_e2_5fapi_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NetworkElement_descriptor_, &NetworkElement::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NetworkElementList_descriptor_, &NetworkElementList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FabricLink_descriptor_, &FabricLink::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FabricLinkList_descriptor_, &FabricLinkList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NetworkElementOpState_descriptor_, &NetworkElementOpState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NetworkElementProperty_descriptor_, &NetworkElementProperty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NetworkElementOpStateList_descriptor_, &NetworkElementOpStateList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConfigurationReply_descriptor_, &ConfigurationReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServiceEndpoint_descriptor_, &ServiceEndpoint::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServiceEndpointList_descriptor_, &ServiceEndpointList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServiceBinding_descriptor_, &ServiceBinding::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_e2_5fapi_2eproto() {
  delete NetworkElement::default_instance_;
  delete NetworkElement_reflection_;
  delete NetworkElementList::default_instance_;
  delete NetworkElementList_reflection_;
  delete FabricLink::default_instance_;
  delete FabricLink_reflection_;
  delete FabricLinkList::default_instance_;
  delete FabricLinkList_reflection_;
  delete NetworkElementOpState::default_instance_;
  delete NetworkElementOpState_reflection_;
  delete NetworkElementProperty::default_instance_;
  delete NetworkElementProperty_default_oneof_instance_;
  delete NetworkElementProperty_reflection_;
  delete NetworkElementOpStateList::default_instance_;
  delete NetworkElementOpStateList_reflection_;
  delete ConfigurationReply::default_instance_;
  delete ConfigurationReply_reflection_;
  delete ServiceEndpoint::default_instance_;
  delete ServiceEndpoint_reflection_;
  delete ServiceEndpointList::default_instance_;
  delete ServiceEndpointList_reflection_;
  delete ServiceBinding::default_instance_;
  delete ServiceBinding_reflection_;
}

void protobuf_AddDesc_e2_5fapi_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014e2_api.proto\022\002E2\"X\n\016NetworkElement\022\014\n\004"
    "name\030\001 \001(\t\022\017\n\007mgmt_ip\030\002 \001(\t\022\'\n\007persona\030\003"
    " \001(\0162\026.E2.NetworkElementType\"6\n\022NetworkE"
    "lementList\022 \n\004list\030\001 \003(\0132\022.E2.NetworkEle"
    "ment\"B\n\nFabricLink\022\014\n\004name\030\001 \001(\t\022\022\n\nendp"
    "oint_1\030\002 \001(\t\022\022\n\nendpoint_2\030\003 \001(\t\".\n\016Fabr"
    "icLinkList\022\034\n\004list\030\001 \003(\0132\016.E2.FabricLink"
    "\"l\n\025NetworkElementOpState\022#\n\007element\030\001 \001"
    "(\0132\022.E2.NetworkElement\022.\n\nproperties\030\002 \003"
    "(\0132\032.E2.NetworkElementProperty\"\312\001\n\026Netwo"
    "rkElementProperty\022\014\n\004name\030\001 \001(\t\022\026\n\014doubl"
    "e_value\030\002 \001(\001H\000\022\023\n\tint_value\030\003 \001(\003H\000\022\024\n\n"
    "uint_value\030\004 \001(\004H\000\022\024\n\nsint_value\030\005 \001(\022H\000"
    "\022\024\n\nbool_value\030\006 \001(\010H\000\022\023\n\tstr_value\030\007 \001("
    "\tH\000\022\025\n\013bytes_value\030\010 \001(\014H\000B\007\n\005value\"G\n\031N"
    "etworkElementOpStateList\022*\n\007opstate\030\001 \003("
    "\0132\031.E2.NetworkElementOpState\"D\n\022Configur"
    "ationReply\022\034\n\004code\030\001 \001(\0162\016.E2.ReturnCode"
    "\022\020\n\010code_str\030\002 \001(\t\"8\n\017ServiceEndpoint\022\014\n"
    "\004name\030\001 \001(\t\022\027\n\017vlan_identifier\030\002 \001(\r\"8\n\023"
    "ServiceEndpointList\022!\n\004list\030\001 \003(\0132\023.E2.S"
    "erviceEndpoint\"\257\001\n\016ServiceBinding\022$\n\007ser"
    "vice\030\001 \001(\0132\023.E2.ServiceEndpoint\022*\n\016acces"
    "s_element\030\002 \001(\0132\022.E2.NetworkElement\022\030\n\020a"
    "ccess_port_list\030\003 \003(\t\0221\n\021edge_element_li"
    "st\030\004 \001(\0132\026.E2.NetworkElementList*J\n\022Netw"
    "orkElementType\022\017\n\013ACCESS_NODE\020\000\022\020\n\014SERVI"
    "CE_NODE\020\001\022\021\n\rINTERNAL_NODE\020\002*\251\001\n\nReturnC"
    "ode\022\013\n\007SUCCESS\020\000\022\021\n\rUNKNOWN_ERROR\020\001\022\022\n\016A"
    "CTIVATE_ERROR\020\002\022\020\n\014MEMORY_ERROR\020\003\022\033\n\027ELE"
    "MENT_NOT_FOUND_ERROR\020\004\022\033\n\027SERVICE_NOT_FO"
    "UND_ERROR\020\005\022\033\n\027SERVICE_PLACEMENT_ERROR\020\006"
    "2\345\004\n\002E2\022>\n\naddElement\022\026.E2.NetworkElemen"
    "tList\032\026.E2.ConfigurationReply\"\000\022A\n\rremov"
    "eElement\022\026.E2.NetworkElementList\032\026.E2.Co"
    "nfigurationReply\"\000\022B\n\013getElements\022\022.E2.N"
    "etworkElement\032\035.E2.NetworkElementOpState"
    "List\"\000\022=\n\raddFabricLink\022\022.E2.FabricLinkL"
    "ist\032\026.E2.ConfigurationReply\"\000\022@\n\020removeF"
    "abricLink\022\022.E2.FabricLinkList\032\026.E2.Confi"
    "gurationReply\"\000\022G\n\022addServiceEndpoint\022\027."
    "E2.ServiceEndpointList\032\026.E2.Configuratio"
    "nReply\"\000\022J\n\025removeServiceEndpoint\022\027.E2.S"
    "erviceEndpointList\032\026.E2.ConfigurationRep"
    "ly\"\000\022\?\n\017activateService\022\022.E2.ServiceBind"
    "ing\032\026.E2.ConfigurationReply\"\000\022A\n\021deactiv"
    "ateService\022\022.E2.ServiceBinding\032\026.E2.Conf"
    "igurationReply\"\000b\006proto3", 1904);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "e2_api.proto", &protobuf_RegisterTypes);
  NetworkElement::default_instance_ = new NetworkElement();
  NetworkElementList::default_instance_ = new NetworkElementList();
  FabricLink::default_instance_ = new FabricLink();
  FabricLinkList::default_instance_ = new FabricLinkList();
  NetworkElementOpState::default_instance_ = new NetworkElementOpState();
  NetworkElementProperty::default_instance_ = new NetworkElementProperty();
  NetworkElementProperty_default_oneof_instance_ = new NetworkElementPropertyOneofInstance();
  NetworkElementOpStateList::default_instance_ = new NetworkElementOpStateList();
  ConfigurationReply::default_instance_ = new ConfigurationReply();
  ServiceEndpoint::default_instance_ = new ServiceEndpoint();
  ServiceEndpointList::default_instance_ = new ServiceEndpointList();
  ServiceBinding::default_instance_ = new ServiceBinding();
  NetworkElement::default_instance_->InitAsDefaultInstance();
  NetworkElementList::default_instance_->InitAsDefaultInstance();
  FabricLink::default_instance_->InitAsDefaultInstance();
  FabricLinkList::default_instance_->InitAsDefaultInstance();
  NetworkElementOpState::default_instance_->InitAsDefaultInstance();
  NetworkElementProperty::default_instance_->InitAsDefaultInstance();
  NetworkElementOpStateList::default_instance_->InitAsDefaultInstance();
  ConfigurationReply::default_instance_->InitAsDefaultInstance();
  ServiceEndpoint::default_instance_->InitAsDefaultInstance();
  ServiceEndpointList::default_instance_->InitAsDefaultInstance();
  ServiceBinding::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_e2_5fapi_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_e2_5fapi_2eproto {
  StaticDescriptorInitializer_e2_5fapi_2eproto() {
    protobuf_AddDesc_e2_5fapi_2eproto();
  }
} static_descriptor_initializer_e2_5fapi_2eproto_;
const ::google::protobuf::EnumDescriptor* NetworkElementType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NetworkElementType_descriptor_;
}
bool NetworkElementType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ReturnCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReturnCode_descriptor_;
}
bool ReturnCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int NetworkElement::kNameFieldNumber;
const int NetworkElement::kMgmtIpFieldNumber;
const int NetworkElement::kPersonaFieldNumber;
#endif  // !_MSC_VER

NetworkElement::NetworkElement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:E2.NetworkElement)
}

void NetworkElement::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

NetworkElement::NetworkElement(const NetworkElement& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:E2.NetworkElement)
}

void NetworkElement::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mgmt_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  persona_ = 0;
}

NetworkElement::~NetworkElement() {
  // @@protoc_insertion_point(destructor:E2.NetworkElement)
  SharedDtor();
}

void NetworkElement::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mgmt_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void NetworkElement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NetworkElement::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NetworkElement_descriptor_;
}

const NetworkElement& NetworkElement::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_e2_5fapi_2eproto();
  return *default_instance_;
}

NetworkElement* NetworkElement::default_instance_ = NULL;

NetworkElement* NetworkElement::New(::google::protobuf::Arena* arena) const {
  NetworkElement* n = new NetworkElement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NetworkElement::Clear() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mgmt_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  persona_ = 0;
}

bool NetworkElement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E2.NetworkElement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "E2.NetworkElement.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mgmt_ip;
        break;
      }

      // optional string mgmt_ip = 2;
      case 2: {
        if (tag == 18) {
         parse_mgmt_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mgmt_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mgmt_ip().data(), this->mgmt_ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "E2.NetworkElement.mgmt_ip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_persona;
        break;
      }

      // optional .E2.NetworkElementType persona = 3;
      case 3: {
        if (tag == 24) {
         parse_persona:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_persona(static_cast< ::E2::NetworkElementType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E2.NetworkElement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E2.NetworkElement)
  return false;
#undef DO_
}

void NetworkElement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E2.NetworkElement)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.NetworkElement.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string mgmt_ip = 2;
  if (this->mgmt_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mgmt_ip().data(), this->mgmt_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.NetworkElement.mgmt_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mgmt_ip(), output);
  }

  // optional .E2.NetworkElementType persona = 3;
  if (this->persona() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->persona(), output);
  }

  // @@protoc_insertion_point(serialize_end:E2.NetworkElement)
}

::google::protobuf::uint8* NetworkElement::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:E2.NetworkElement)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.NetworkElement.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string mgmt_ip = 2;
  if (this->mgmt_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mgmt_ip().data(), this->mgmt_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.NetworkElement.mgmt_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mgmt_ip(), target);
  }

  // optional .E2.NetworkElementType persona = 3;
  if (this->persona() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->persona(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:E2.NetworkElement)
  return target;
}

int NetworkElement::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string mgmt_ip = 2;
  if (this->mgmt_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mgmt_ip());
  }

  // optional .E2.NetworkElementType persona = 3;
  if (this->persona() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->persona());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NetworkElement::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NetworkElement* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NetworkElement>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NetworkElement::MergeFrom(const NetworkElement& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.mgmt_ip().size() > 0) {

    mgmt_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mgmt_ip_);
  }
  if (from.persona() != 0) {
    set_persona(from.persona());
  }
}

void NetworkElement::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkElement::CopyFrom(const NetworkElement& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkElement::IsInitialized() const {

  return true;
}

void NetworkElement::Swap(NetworkElement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetworkElement::InternalSwap(NetworkElement* other) {
  name_.Swap(&other->name_);
  mgmt_ip_.Swap(&other->mgmt_ip_);
  std::swap(persona_, other->persona_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NetworkElement::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NetworkElement_descriptor_;
  metadata.reflection = NetworkElement_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NetworkElement

// optional string name = 1;
void NetworkElement::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& NetworkElement::name() const {
  // @@protoc_insertion_point(field_get:E2.NetworkElement.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NetworkElement::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:E2.NetworkElement.name)
}
 void NetworkElement::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:E2.NetworkElement.name)
}
 void NetworkElement::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:E2.NetworkElement.name)
}
 ::std::string* NetworkElement::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:E2.NetworkElement.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NetworkElement::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NetworkElement::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:E2.NetworkElement.name)
}

// optional string mgmt_ip = 2;
void NetworkElement::clear_mgmt_ip() {
  mgmt_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& NetworkElement::mgmt_ip() const {
  // @@protoc_insertion_point(field_get:E2.NetworkElement.mgmt_ip)
  return mgmt_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NetworkElement::set_mgmt_ip(const ::std::string& value) {
  
  mgmt_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:E2.NetworkElement.mgmt_ip)
}
 void NetworkElement::set_mgmt_ip(const char* value) {
  
  mgmt_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:E2.NetworkElement.mgmt_ip)
}
 void NetworkElement::set_mgmt_ip(const char* value, size_t size) {
  
  mgmt_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:E2.NetworkElement.mgmt_ip)
}
 ::std::string* NetworkElement::mutable_mgmt_ip() {
  
  // @@protoc_insertion_point(field_mutable:E2.NetworkElement.mgmt_ip)
  return mgmt_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NetworkElement::release_mgmt_ip() {
  
  return mgmt_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NetworkElement::set_allocated_mgmt_ip(::std::string* mgmt_ip) {
  if (mgmt_ip != NULL) {
    
  } else {
    
  }
  mgmt_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mgmt_ip);
  // @@protoc_insertion_point(field_set_allocated:E2.NetworkElement.mgmt_ip)
}

// optional .E2.NetworkElementType persona = 3;
void NetworkElement::clear_persona() {
  persona_ = 0;
}
 ::E2::NetworkElementType NetworkElement::persona() const {
  // @@protoc_insertion_point(field_get:E2.NetworkElement.persona)
  return static_cast< ::E2::NetworkElementType >(persona_);
}
 void NetworkElement::set_persona(::E2::NetworkElementType value) {
  
  persona_ = value;
  // @@protoc_insertion_point(field_set:E2.NetworkElement.persona)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int NetworkElementList::kListFieldNumber;
#endif  // !_MSC_VER

NetworkElementList::NetworkElementList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:E2.NetworkElementList)
}

void NetworkElementList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

NetworkElementList::NetworkElementList(const NetworkElementList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:E2.NetworkElementList)
}

void NetworkElementList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

NetworkElementList::~NetworkElementList() {
  // @@protoc_insertion_point(destructor:E2.NetworkElementList)
  SharedDtor();
}

void NetworkElementList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NetworkElementList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NetworkElementList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NetworkElementList_descriptor_;
}

const NetworkElementList& NetworkElementList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_e2_5fapi_2eproto();
  return *default_instance_;
}

NetworkElementList* NetworkElementList::default_instance_ = NULL;

NetworkElementList* NetworkElementList::New(::google::protobuf::Arena* arena) const {
  NetworkElementList* n = new NetworkElementList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NetworkElementList::Clear() {
  list_.Clear();
}

bool NetworkElementList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E2.NetworkElementList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .E2.NetworkElement list = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E2.NetworkElementList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E2.NetworkElementList)
  return false;
#undef DO_
}

void NetworkElementList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E2.NetworkElementList)
  // repeated .E2.NetworkElement list = 1;
  for (unsigned int i = 0, n = this->list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:E2.NetworkElementList)
}

::google::protobuf::uint8* NetworkElementList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:E2.NetworkElementList)
  // repeated .E2.NetworkElement list = 1;
  for (unsigned int i = 0, n = this->list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->list(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:E2.NetworkElementList)
  return target;
}

int NetworkElementList::ByteSize() const {
  int total_size = 0;

  // repeated .E2.NetworkElement list = 1;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NetworkElementList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NetworkElementList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NetworkElementList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NetworkElementList::MergeFrom(const NetworkElementList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  list_.MergeFrom(from.list_);
}

void NetworkElementList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkElementList::CopyFrom(const NetworkElementList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkElementList::IsInitialized() const {

  return true;
}

void NetworkElementList::Swap(NetworkElementList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetworkElementList::InternalSwap(NetworkElementList* other) {
  list_.UnsafeArenaSwap(&other->list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NetworkElementList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NetworkElementList_descriptor_;
  metadata.reflection = NetworkElementList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NetworkElementList

// repeated .E2.NetworkElement list = 1;
int NetworkElementList::list_size() const {
  return list_.size();
}
void NetworkElementList::clear_list() {
  list_.Clear();
}
const ::E2::NetworkElement& NetworkElementList::list(int index) const {
  // @@protoc_insertion_point(field_get:E2.NetworkElementList.list)
  return list_.Get(index);
}
::E2::NetworkElement* NetworkElementList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:E2.NetworkElementList.list)
  return list_.Mutable(index);
}
::E2::NetworkElement* NetworkElementList::add_list() {
  // @@protoc_insertion_point(field_add:E2.NetworkElementList.list)
  return list_.Add();
}
::google::protobuf::RepeatedPtrField< ::E2::NetworkElement >*
NetworkElementList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:E2.NetworkElementList.list)
  return &list_;
}
const ::google::protobuf::RepeatedPtrField< ::E2::NetworkElement >&
NetworkElementList::list() const {
  // @@protoc_insertion_point(field_list:E2.NetworkElementList.list)
  return list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int FabricLink::kNameFieldNumber;
const int FabricLink::kEndpoint1FieldNumber;
const int FabricLink::kEndpoint2FieldNumber;
#endif  // !_MSC_VER

FabricLink::FabricLink()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:E2.FabricLink)
}

void FabricLink::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FabricLink::FabricLink(const FabricLink& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:E2.FabricLink)
}

void FabricLink::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FabricLink::~FabricLink() {
  // @@protoc_insertion_point(destructor:E2.FabricLink)
  SharedDtor();
}

void FabricLink::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void FabricLink::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FabricLink::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FabricLink_descriptor_;
}

const FabricLink& FabricLink::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_e2_5fapi_2eproto();
  return *default_instance_;
}

FabricLink* FabricLink::default_instance_ = NULL;

FabricLink* FabricLink::New(::google::protobuf::Arena* arena) const {
  FabricLink* n = new FabricLink;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FabricLink::Clear() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool FabricLink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E2.FabricLink)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "E2.FabricLink.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_endpoint_1;
        break;
      }

      // optional string endpoint_1 = 2;
      case 2: {
        if (tag == 18) {
         parse_endpoint_1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint_1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->endpoint_1().data(), this->endpoint_1().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "E2.FabricLink.endpoint_1"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_endpoint_2;
        break;
      }

      // optional string endpoint_2 = 3;
      case 3: {
        if (tag == 26) {
         parse_endpoint_2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint_2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->endpoint_2().data(), this->endpoint_2().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "E2.FabricLink.endpoint_2"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E2.FabricLink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E2.FabricLink)
  return false;
#undef DO_
}

void FabricLink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E2.FabricLink)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.FabricLink.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string endpoint_1 = 2;
  if (this->endpoint_1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint_1().data(), this->endpoint_1().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.FabricLink.endpoint_1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->endpoint_1(), output);
  }

  // optional string endpoint_2 = 3;
  if (this->endpoint_2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint_2().data(), this->endpoint_2().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.FabricLink.endpoint_2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->endpoint_2(), output);
  }

  // @@protoc_insertion_point(serialize_end:E2.FabricLink)
}

::google::protobuf::uint8* FabricLink::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:E2.FabricLink)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.FabricLink.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string endpoint_1 = 2;
  if (this->endpoint_1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint_1().data(), this->endpoint_1().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.FabricLink.endpoint_1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->endpoint_1(), target);
  }

  // optional string endpoint_2 = 3;
  if (this->endpoint_2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint_2().data(), this->endpoint_2().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.FabricLink.endpoint_2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->endpoint_2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:E2.FabricLink)
  return target;
}

int FabricLink::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string endpoint_1 = 2;
  if (this->endpoint_1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint_1());
  }

  // optional string endpoint_2 = 3;
  if (this->endpoint_2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint_2());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FabricLink::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FabricLink* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FabricLink>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FabricLink::MergeFrom(const FabricLink& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.endpoint_1().size() > 0) {

    endpoint_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_1_);
  }
  if (from.endpoint_2().size() > 0) {

    endpoint_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_2_);
  }
}

void FabricLink::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FabricLink::CopyFrom(const FabricLink& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FabricLink::IsInitialized() const {

  return true;
}

void FabricLink::Swap(FabricLink* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FabricLink::InternalSwap(FabricLink* other) {
  name_.Swap(&other->name_);
  endpoint_1_.Swap(&other->endpoint_1_);
  endpoint_2_.Swap(&other->endpoint_2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FabricLink::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FabricLink_descriptor_;
  metadata.reflection = FabricLink_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FabricLink

// optional string name = 1;
void FabricLink::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FabricLink::name() const {
  // @@protoc_insertion_point(field_get:E2.FabricLink.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FabricLink::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:E2.FabricLink.name)
}
 void FabricLink::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:E2.FabricLink.name)
}
 void FabricLink::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:E2.FabricLink.name)
}
 ::std::string* FabricLink::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:E2.FabricLink.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FabricLink::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FabricLink::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:E2.FabricLink.name)
}

// optional string endpoint_1 = 2;
void FabricLink::clear_endpoint_1() {
  endpoint_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FabricLink::endpoint_1() const {
  // @@protoc_insertion_point(field_get:E2.FabricLink.endpoint_1)
  return endpoint_1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FabricLink::set_endpoint_1(const ::std::string& value) {
  
  endpoint_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:E2.FabricLink.endpoint_1)
}
 void FabricLink::set_endpoint_1(const char* value) {
  
  endpoint_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:E2.FabricLink.endpoint_1)
}
 void FabricLink::set_endpoint_1(const char* value, size_t size) {
  
  endpoint_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:E2.FabricLink.endpoint_1)
}
 ::std::string* FabricLink::mutable_endpoint_1() {
  
  // @@protoc_insertion_point(field_mutable:E2.FabricLink.endpoint_1)
  return endpoint_1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FabricLink::release_endpoint_1() {
  
  return endpoint_1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FabricLink::set_allocated_endpoint_1(::std::string* endpoint_1) {
  if (endpoint_1 != NULL) {
    
  } else {
    
  }
  endpoint_1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endpoint_1);
  // @@protoc_insertion_point(field_set_allocated:E2.FabricLink.endpoint_1)
}

// optional string endpoint_2 = 3;
void FabricLink::clear_endpoint_2() {
  endpoint_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FabricLink::endpoint_2() const {
  // @@protoc_insertion_point(field_get:E2.FabricLink.endpoint_2)
  return endpoint_2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FabricLink::set_endpoint_2(const ::std::string& value) {
  
  endpoint_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:E2.FabricLink.endpoint_2)
}
 void FabricLink::set_endpoint_2(const char* value) {
  
  endpoint_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:E2.FabricLink.endpoint_2)
}
 void FabricLink::set_endpoint_2(const char* value, size_t size) {
  
  endpoint_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:E2.FabricLink.endpoint_2)
}
 ::std::string* FabricLink::mutable_endpoint_2() {
  
  // @@protoc_insertion_point(field_mutable:E2.FabricLink.endpoint_2)
  return endpoint_2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FabricLink::release_endpoint_2() {
  
  return endpoint_2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FabricLink::set_allocated_endpoint_2(::std::string* endpoint_2) {
  if (endpoint_2 != NULL) {
    
  } else {
    
  }
  endpoint_2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endpoint_2);
  // @@protoc_insertion_point(field_set_allocated:E2.FabricLink.endpoint_2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int FabricLinkList::kListFieldNumber;
#endif  // !_MSC_VER

FabricLinkList::FabricLinkList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:E2.FabricLinkList)
}

void FabricLinkList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FabricLinkList::FabricLinkList(const FabricLinkList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:E2.FabricLinkList)
}

void FabricLinkList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

FabricLinkList::~FabricLinkList() {
  // @@protoc_insertion_point(destructor:E2.FabricLinkList)
  SharedDtor();
}

void FabricLinkList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FabricLinkList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FabricLinkList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FabricLinkList_descriptor_;
}

const FabricLinkList& FabricLinkList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_e2_5fapi_2eproto();
  return *default_instance_;
}

FabricLinkList* FabricLinkList::default_instance_ = NULL;

FabricLinkList* FabricLinkList::New(::google::protobuf::Arena* arena) const {
  FabricLinkList* n = new FabricLinkList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FabricLinkList::Clear() {
  list_.Clear();
}

bool FabricLinkList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E2.FabricLinkList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .E2.FabricLink list = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E2.FabricLinkList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E2.FabricLinkList)
  return false;
#undef DO_
}

void FabricLinkList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E2.FabricLinkList)
  // repeated .E2.FabricLink list = 1;
  for (unsigned int i = 0, n = this->list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:E2.FabricLinkList)
}

::google::protobuf::uint8* FabricLinkList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:E2.FabricLinkList)
  // repeated .E2.FabricLink list = 1;
  for (unsigned int i = 0, n = this->list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->list(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:E2.FabricLinkList)
  return target;
}

int FabricLinkList::ByteSize() const {
  int total_size = 0;

  // repeated .E2.FabricLink list = 1;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FabricLinkList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FabricLinkList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FabricLinkList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FabricLinkList::MergeFrom(const FabricLinkList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  list_.MergeFrom(from.list_);
}

void FabricLinkList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FabricLinkList::CopyFrom(const FabricLinkList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FabricLinkList::IsInitialized() const {

  return true;
}

void FabricLinkList::Swap(FabricLinkList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FabricLinkList::InternalSwap(FabricLinkList* other) {
  list_.UnsafeArenaSwap(&other->list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FabricLinkList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FabricLinkList_descriptor_;
  metadata.reflection = FabricLinkList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FabricLinkList

// repeated .E2.FabricLink list = 1;
int FabricLinkList::list_size() const {
  return list_.size();
}
void FabricLinkList::clear_list() {
  list_.Clear();
}
const ::E2::FabricLink& FabricLinkList::list(int index) const {
  // @@protoc_insertion_point(field_get:E2.FabricLinkList.list)
  return list_.Get(index);
}
::E2::FabricLink* FabricLinkList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:E2.FabricLinkList.list)
  return list_.Mutable(index);
}
::E2::FabricLink* FabricLinkList::add_list() {
  // @@protoc_insertion_point(field_add:E2.FabricLinkList.list)
  return list_.Add();
}
::google::protobuf::RepeatedPtrField< ::E2::FabricLink >*
FabricLinkList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:E2.FabricLinkList.list)
  return &list_;
}
const ::google::protobuf::RepeatedPtrField< ::E2::FabricLink >&
FabricLinkList::list() const {
  // @@protoc_insertion_point(field_list:E2.FabricLinkList.list)
  return list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int NetworkElementOpState::kElementFieldNumber;
const int NetworkElementOpState::kPropertiesFieldNumber;
#endif  // !_MSC_VER

NetworkElementOpState::NetworkElementOpState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:E2.NetworkElementOpState)
}

void NetworkElementOpState::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  element_ = const_cast< ::E2::NetworkElement*>(&::E2::NetworkElement::default_instance());
}

NetworkElementOpState::NetworkElementOpState(const NetworkElementOpState& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:E2.NetworkElementOpState)
}

void NetworkElementOpState::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  element_ = NULL;
}

NetworkElementOpState::~NetworkElementOpState() {
  // @@protoc_insertion_point(destructor:E2.NetworkElementOpState)
  SharedDtor();
}

void NetworkElementOpState::SharedDtor() {
  if (this != default_instance_) {
    delete element_;
  }
}

void NetworkElementOpState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NetworkElementOpState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NetworkElementOpState_descriptor_;
}

const NetworkElementOpState& NetworkElementOpState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_e2_5fapi_2eproto();
  return *default_instance_;
}

NetworkElementOpState* NetworkElementOpState::default_instance_ = NULL;

NetworkElementOpState* NetworkElementOpState::New(::google::protobuf::Arena* arena) const {
  NetworkElementOpState* n = new NetworkElementOpState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NetworkElementOpState::Clear() {
  if (GetArenaNoVirtual() == NULL && element_ != NULL) delete element_;
  element_ = NULL;
  properties_.Clear();
}

bool NetworkElementOpState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E2.NetworkElementOpState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .E2.NetworkElement element = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_element()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_properties;
        break;
      }

      // repeated .E2.NetworkElementProperty properties = 2;
      case 2: {
        if (tag == 18) {
         parse_properties:
          DO_(input->IncrementRecursionDepth());
         parse_loop_properties:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_properties;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E2.NetworkElementOpState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E2.NetworkElementOpState)
  return false;
#undef DO_
}

void NetworkElementOpState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E2.NetworkElementOpState)
  // optional .E2.NetworkElement element = 1;
  if (this->has_element()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->element_, output);
  }

  // repeated .E2.NetworkElementProperty properties = 2;
  for (unsigned int i = 0, n = this->properties_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->properties(i), output);
  }

  // @@protoc_insertion_point(serialize_end:E2.NetworkElementOpState)
}

::google::protobuf::uint8* NetworkElementOpState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:E2.NetworkElementOpState)
  // optional .E2.NetworkElement element = 1;
  if (this->has_element()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->element_, target);
  }

  // repeated .E2.NetworkElementProperty properties = 2;
  for (unsigned int i = 0, n = this->properties_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->properties(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:E2.NetworkElementOpState)
  return target;
}

int NetworkElementOpState::ByteSize() const {
  int total_size = 0;

  // optional .E2.NetworkElement element = 1;
  if (this->has_element()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->element_);
  }

  // repeated .E2.NetworkElementProperty properties = 2;
  total_size += 1 * this->properties_size();
  for (int i = 0; i < this->properties_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->properties(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NetworkElementOpState::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NetworkElementOpState* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NetworkElementOpState>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NetworkElementOpState::MergeFrom(const NetworkElementOpState& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  properties_.MergeFrom(from.properties_);
  if (from.has_element()) {
    mutable_element()->::E2::NetworkElement::MergeFrom(from.element());
  }
}

void NetworkElementOpState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkElementOpState::CopyFrom(const NetworkElementOpState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkElementOpState::IsInitialized() const {

  return true;
}

void NetworkElementOpState::Swap(NetworkElementOpState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetworkElementOpState::InternalSwap(NetworkElementOpState* other) {
  std::swap(element_, other->element_);
  properties_.UnsafeArenaSwap(&other->properties_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NetworkElementOpState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NetworkElementOpState_descriptor_;
  metadata.reflection = NetworkElementOpState_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NetworkElementOpState

// optional .E2.NetworkElement element = 1;
bool NetworkElementOpState::has_element() const {
  return !_is_default_instance_ && element_ != NULL;
}
void NetworkElementOpState::clear_element() {
  if (GetArenaNoVirtual() == NULL && element_ != NULL) delete element_;
  element_ = NULL;
}
const ::E2::NetworkElement& NetworkElementOpState::element() const {
  // @@protoc_insertion_point(field_get:E2.NetworkElementOpState.element)
  return element_ != NULL ? *element_ : *default_instance_->element_;
}
::E2::NetworkElement* NetworkElementOpState::mutable_element() {
  
  if (element_ == NULL) {
    element_ = new ::E2::NetworkElement;
  }
  // @@protoc_insertion_point(field_mutable:E2.NetworkElementOpState.element)
  return element_;
}
::E2::NetworkElement* NetworkElementOpState::release_element() {
  
  ::E2::NetworkElement* temp = element_;
  element_ = NULL;
  return temp;
}
void NetworkElementOpState::set_allocated_element(::E2::NetworkElement* element) {
  delete element_;
  element_ = element;
  if (element) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:E2.NetworkElementOpState.element)
}

// repeated .E2.NetworkElementProperty properties = 2;
int NetworkElementOpState::properties_size() const {
  return properties_.size();
}
void NetworkElementOpState::clear_properties() {
  properties_.Clear();
}
const ::E2::NetworkElementProperty& NetworkElementOpState::properties(int index) const {
  // @@protoc_insertion_point(field_get:E2.NetworkElementOpState.properties)
  return properties_.Get(index);
}
::E2::NetworkElementProperty* NetworkElementOpState::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:E2.NetworkElementOpState.properties)
  return properties_.Mutable(index);
}
::E2::NetworkElementProperty* NetworkElementOpState::add_properties() {
  // @@protoc_insertion_point(field_add:E2.NetworkElementOpState.properties)
  return properties_.Add();
}
::google::protobuf::RepeatedPtrField< ::E2::NetworkElementProperty >*
NetworkElementOpState::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:E2.NetworkElementOpState.properties)
  return &properties_;
}
const ::google::protobuf::RepeatedPtrField< ::E2::NetworkElementProperty >&
NetworkElementOpState::properties() const {
  // @@protoc_insertion_point(field_list:E2.NetworkElementOpState.properties)
  return properties_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int NetworkElementProperty::kNameFieldNumber;
const int NetworkElementProperty::kDoubleValueFieldNumber;
const int NetworkElementProperty::kIntValueFieldNumber;
const int NetworkElementProperty::kUintValueFieldNumber;
const int NetworkElementProperty::kSintValueFieldNumber;
const int NetworkElementProperty::kBoolValueFieldNumber;
const int NetworkElementProperty::kStrValueFieldNumber;
const int NetworkElementProperty::kBytesValueFieldNumber;
#endif  // !_MSC_VER

NetworkElementProperty::NetworkElementProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:E2.NetworkElementProperty)
}

void NetworkElementProperty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  NetworkElementProperty_default_oneof_instance_->double_value_ = 0;
  NetworkElementProperty_default_oneof_instance_->int_value_ = GOOGLE_LONGLONG(0);
  NetworkElementProperty_default_oneof_instance_->uint_value_ = GOOGLE_ULONGLONG(0);
  NetworkElementProperty_default_oneof_instance_->sint_value_ = GOOGLE_LONGLONG(0);
  NetworkElementProperty_default_oneof_instance_->bool_value_ = false;
  NetworkElementProperty_default_oneof_instance_->str_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  NetworkElementProperty_default_oneof_instance_->bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NetworkElementProperty::NetworkElementProperty(const NetworkElementProperty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:E2.NetworkElementProperty)
}

void NetworkElementProperty::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}

NetworkElementProperty::~NetworkElementProperty() {
  // @@protoc_insertion_point(destructor:E2.NetworkElementProperty)
  SharedDtor();
}

void NetworkElementProperty::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_value()) {
    clear_value();
  }
  if (this != default_instance_) {
  }
}

void NetworkElementProperty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NetworkElementProperty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NetworkElementProperty_descriptor_;
}

const NetworkElementProperty& NetworkElementProperty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_e2_5fapi_2eproto();
  return *default_instance_;
}

NetworkElementProperty* NetworkElementProperty::default_instance_ = NULL;

NetworkElementProperty* NetworkElementProperty::New(::google::protobuf::Arena* arena) const {
  NetworkElementProperty* n = new NetworkElementProperty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NetworkElementProperty::clear_value() {
  switch(value_case()) {
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kIntValue: {
      // No need to clear
      break;
    }
    case kUintValue: {
      // No need to clear
      break;
    }
    case kSintValue: {
      // No need to clear
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kStrValue: {
      value_.str_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBytesValue: {
      value_.bytes_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void NetworkElementProperty::Clear() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_value();
}

bool NetworkElementProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E2.NetworkElementProperty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "E2.NetworkElementProperty.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_double_value;
        break;
      }

      // optional double double_value = 2;
      case 2: {
        if (tag == 17) {
         parse_double_value:
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_.double_value_)));
          set_has_double_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_int_value;
        break;
      }

      // optional int64 int_value = 3;
      case 3: {
        if (tag == 24) {
         parse_int_value:
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.int_value_)));
          set_has_int_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_uint_value;
        break;
      }

      // optional uint64 uint_value = 4;
      case 4: {
        if (tag == 32) {
         parse_uint_value:
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_.uint_value_)));
          set_has_uint_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_sint_value;
        break;
      }

      // optional sint64 sint_value = 5;
      case 5: {
        if (tag == 40) {
         parse_sint_value:
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &value_.sint_value_)));
          set_has_sint_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_bool_value;
        break;
      }

      // optional bool bool_value = 6;
      case 6: {
        if (tag == 48) {
         parse_bool_value:
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.bool_value_)));
          set_has_bool_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_str_value;
        break;
      }

      // optional string str_value = 7;
      case 7: {
        if (tag == 58) {
         parse_str_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str_value().data(), this->str_value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "E2.NetworkElementProperty.str_value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_bytes_value;
        break;
      }

      // optional bytes bytes_value = 8;
      case 8: {
        if (tag == 66) {
         parse_bytes_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E2.NetworkElementProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E2.NetworkElementProperty)
  return false;
#undef DO_
}

void NetworkElementProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E2.NetworkElementProperty)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.NetworkElementProperty.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional double double_value = 2;
  if (has_double_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->double_value(), output);
  }

  // optional int64 int_value = 3;
  if (has_int_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->int_value(), output);
  }

  // optional uint64 uint_value = 4;
  if (has_uint_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->uint_value(), output);
  }

  // optional sint64 sint_value = 5;
  if (has_sint_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(5, this->sint_value(), output);
  }

  // optional bool bool_value = 6;
  if (has_bool_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->bool_value(), output);
  }

  // optional string str_value = 7;
  if (has_str_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_value().data(), this->str_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.NetworkElementProperty.str_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->str_value(), output);
  }

  // optional bytes bytes_value = 8;
  if (has_bytes_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->bytes_value(), output);
  }

  // @@protoc_insertion_point(serialize_end:E2.NetworkElementProperty)
}

::google::protobuf::uint8* NetworkElementProperty::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:E2.NetworkElementProperty)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.NetworkElementProperty.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional double double_value = 2;
  if (has_double_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->double_value(), target);
  }

  // optional int64 int_value = 3;
  if (has_int_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->int_value(), target);
  }

  // optional uint64 uint_value = 4;
  if (has_uint_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->uint_value(), target);
  }

  // optional sint64 sint_value = 5;
  if (has_sint_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(5, this->sint_value(), target);
  }

  // optional bool bool_value = 6;
  if (has_bool_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->bool_value(), target);
  }

  // optional string str_value = 7;
  if (has_str_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_value().data(), this->str_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.NetworkElementProperty.str_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->str_value(), target);
  }

  // optional bytes bytes_value = 8;
  if (has_bytes_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->bytes_value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:E2.NetworkElementProperty)
  return target;
}

int NetworkElementProperty::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  switch (value_case()) {
    // optional double double_value = 2;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // optional int64 int_value = 3;
    case kIntValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int_value());
      break;
    }
    // optional uint64 uint_value = 4;
    case kUintValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uint_value());
      break;
    }
    // optional sint64 sint_value = 5;
    case kSintValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->sint_value());
      break;
    }
    // optional bool bool_value = 6;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // optional string str_value = 7;
    case kStrValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str_value());
      break;
    }
    // optional bytes bytes_value = 8;
    case kBytesValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NetworkElementProperty::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NetworkElementProperty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NetworkElementProperty>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NetworkElementProperty::MergeFrom(const NetworkElementProperty& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  switch (from.value_case()) {
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kIntValue: {
      set_int_value(from.int_value());
      break;
    }
    case kUintValue: {
      set_uint_value(from.uint_value());
      break;
    }
    case kSintValue: {
      set_sint_value(from.sint_value());
      break;
    }
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kStrValue: {
      set_str_value(from.str_value());
      break;
    }
    case kBytesValue: {
      set_bytes_value(from.bytes_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void NetworkElementProperty::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkElementProperty::CopyFrom(const NetworkElementProperty& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkElementProperty::IsInitialized() const {

  return true;
}

void NetworkElementProperty::Swap(NetworkElementProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetworkElementProperty::InternalSwap(NetworkElementProperty* other) {
  name_.Swap(&other->name_);
  std::swap(value_, other->value_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NetworkElementProperty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NetworkElementProperty_descriptor_;
  metadata.reflection = NetworkElementProperty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NetworkElementProperty

// optional string name = 1;
void NetworkElementProperty::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& NetworkElementProperty::name() const {
  // @@protoc_insertion_point(field_get:E2.NetworkElementProperty.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NetworkElementProperty::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:E2.NetworkElementProperty.name)
}
 void NetworkElementProperty::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:E2.NetworkElementProperty.name)
}
 void NetworkElementProperty::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:E2.NetworkElementProperty.name)
}
 ::std::string* NetworkElementProperty::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:E2.NetworkElementProperty.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NetworkElementProperty::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NetworkElementProperty::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:E2.NetworkElementProperty.name)
}

// optional double double_value = 2;
bool NetworkElementProperty::has_double_value() const {
  return value_case() == kDoubleValue;
}
void NetworkElementProperty::set_has_double_value() {
  _oneof_case_[0] = kDoubleValue;
}
void NetworkElementProperty::clear_double_value() {
  if (has_double_value()) {
    value_.double_value_ = 0;
    clear_has_value();
  }
}
 double NetworkElementProperty::double_value() const {
  // @@protoc_insertion_point(field_get:E2.NetworkElementProperty.double_value)
  if (has_double_value()) {
    return value_.double_value_;
  }
  return 0;
}
 void NetworkElementProperty::set_double_value(double value) {
  if (!has_double_value()) {
    clear_value();
    set_has_double_value();
  }
  value_.double_value_ = value;
  // @@protoc_insertion_point(field_set:E2.NetworkElementProperty.double_value)
}

// optional int64 int_value = 3;
bool NetworkElementProperty::has_int_value() const {
  return value_case() == kIntValue;
}
void NetworkElementProperty::set_has_int_value() {
  _oneof_case_[0] = kIntValue;
}
void NetworkElementProperty::clear_int_value() {
  if (has_int_value()) {
    value_.int_value_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
 ::google::protobuf::int64 NetworkElementProperty::int_value() const {
  // @@protoc_insertion_point(field_get:E2.NetworkElementProperty.int_value)
  if (has_int_value()) {
    return value_.int_value_;
  }
  return GOOGLE_LONGLONG(0);
}
 void NetworkElementProperty::set_int_value(::google::protobuf::int64 value) {
  if (!has_int_value()) {
    clear_value();
    set_has_int_value();
  }
  value_.int_value_ = value;
  // @@protoc_insertion_point(field_set:E2.NetworkElementProperty.int_value)
}

// optional uint64 uint_value = 4;
bool NetworkElementProperty::has_uint_value() const {
  return value_case() == kUintValue;
}
void NetworkElementProperty::set_has_uint_value() {
  _oneof_case_[0] = kUintValue;
}
void NetworkElementProperty::clear_uint_value() {
  if (has_uint_value()) {
    value_.uint_value_ = GOOGLE_ULONGLONG(0);
    clear_has_value();
  }
}
 ::google::protobuf::uint64 NetworkElementProperty::uint_value() const {
  // @@protoc_insertion_point(field_get:E2.NetworkElementProperty.uint_value)
  if (has_uint_value()) {
    return value_.uint_value_;
  }
  return GOOGLE_ULONGLONG(0);
}
 void NetworkElementProperty::set_uint_value(::google::protobuf::uint64 value) {
  if (!has_uint_value()) {
    clear_value();
    set_has_uint_value();
  }
  value_.uint_value_ = value;
  // @@protoc_insertion_point(field_set:E2.NetworkElementProperty.uint_value)
}

// optional sint64 sint_value = 5;
bool NetworkElementProperty::has_sint_value() const {
  return value_case() == kSintValue;
}
void NetworkElementProperty::set_has_sint_value() {
  _oneof_case_[0] = kSintValue;
}
void NetworkElementProperty::clear_sint_value() {
  if (has_sint_value()) {
    value_.sint_value_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
 ::google::protobuf::int64 NetworkElementProperty::sint_value() const {
  // @@protoc_insertion_point(field_get:E2.NetworkElementProperty.sint_value)
  if (has_sint_value()) {
    return value_.sint_value_;
  }
  return GOOGLE_LONGLONG(0);
}
 void NetworkElementProperty::set_sint_value(::google::protobuf::int64 value) {
  if (!has_sint_value()) {
    clear_value();
    set_has_sint_value();
  }
  value_.sint_value_ = value;
  // @@protoc_insertion_point(field_set:E2.NetworkElementProperty.sint_value)
}

// optional bool bool_value = 6;
bool NetworkElementProperty::has_bool_value() const {
  return value_case() == kBoolValue;
}
void NetworkElementProperty::set_has_bool_value() {
  _oneof_case_[0] = kBoolValue;
}
void NetworkElementProperty::clear_bool_value() {
  if (has_bool_value()) {
    value_.bool_value_ = false;
    clear_has_value();
  }
}
 bool NetworkElementProperty::bool_value() const {
  // @@protoc_insertion_point(field_get:E2.NetworkElementProperty.bool_value)
  if (has_bool_value()) {
    return value_.bool_value_;
  }
  return false;
}
 void NetworkElementProperty::set_bool_value(bool value) {
  if (!has_bool_value()) {
    clear_value();
    set_has_bool_value();
  }
  value_.bool_value_ = value;
  // @@protoc_insertion_point(field_set:E2.NetworkElementProperty.bool_value)
}

// optional string str_value = 7;
bool NetworkElementProperty::has_str_value() const {
  return value_case() == kStrValue;
}
void NetworkElementProperty::set_has_str_value() {
  _oneof_case_[0] = kStrValue;
}
void NetworkElementProperty::clear_str_value() {
  if (has_str_value()) {
    value_.str_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
 const ::std::string& NetworkElementProperty::str_value() const {
  // @@protoc_insertion_point(field_get:E2.NetworkElementProperty.str_value)
  if (has_str_value()) {
    return value_.str_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
 void NetworkElementProperty::set_str_value(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:E2.NetworkElementProperty.str_value)
  if (!has_str_value()) {
    clear_value();
    set_has_str_value();
    value_.str_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:E2.NetworkElementProperty.str_value)
}
 void NetworkElementProperty::set_str_value(const char* value) {
  if (!has_str_value()) {
    clear_value();
    set_has_str_value();
    value_.str_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:E2.NetworkElementProperty.str_value)
}
 void NetworkElementProperty::set_str_value(const char* value, size_t size) {
  if (!has_str_value()) {
    clear_value();
    set_has_str_value();
    value_.str_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:E2.NetworkElementProperty.str_value)
}
 ::std::string* NetworkElementProperty::mutable_str_value() {
  if (!has_str_value()) {
    clear_value();
    set_has_str_value();
    value_.str_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:E2.NetworkElementProperty.str_value)
  return value_.str_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NetworkElementProperty::release_str_value() {
  if (has_str_value()) {
    clear_has_value();
    return value_.str_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
 void NetworkElementProperty::set_allocated_str_value(::std::string* str_value) {
  if (!has_str_value()) {
    value_.str_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (str_value != NULL) {
    set_has_str_value();
    value_.str_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        str_value);
  }
  // @@protoc_insertion_point(field_set_allocated:E2.NetworkElementProperty.str_value)
}

// optional bytes bytes_value = 8;
bool NetworkElementProperty::has_bytes_value() const {
  return value_case() == kBytesValue;
}
void NetworkElementProperty::set_has_bytes_value() {
  _oneof_case_[0] = kBytesValue;
}
void NetworkElementProperty::clear_bytes_value() {
  if (has_bytes_value()) {
    value_.bytes_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
 const ::std::string& NetworkElementProperty::bytes_value() const {
  // @@protoc_insertion_point(field_get:E2.NetworkElementProperty.bytes_value)
  if (has_bytes_value()) {
    return value_.bytes_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
 void NetworkElementProperty::set_bytes_value(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:E2.NetworkElementProperty.bytes_value)
  if (!has_bytes_value()) {
    clear_value();
    set_has_bytes_value();
    value_.bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bytes_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:E2.NetworkElementProperty.bytes_value)
}
 void NetworkElementProperty::set_bytes_value(const char* value) {
  if (!has_bytes_value()) {
    clear_value();
    set_has_bytes_value();
    value_.bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bytes_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:E2.NetworkElementProperty.bytes_value)
}
 void NetworkElementProperty::set_bytes_value(const void* value, size_t size) {
  if (!has_bytes_value()) {
    clear_value();
    set_has_bytes_value();
    value_.bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bytes_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:E2.NetworkElementProperty.bytes_value)
}
 ::std::string* NetworkElementProperty::mutable_bytes_value() {
  if (!has_bytes_value()) {
    clear_value();
    set_has_bytes_value();
    value_.bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:E2.NetworkElementProperty.bytes_value)
  return value_.bytes_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NetworkElementProperty::release_bytes_value() {
  if (has_bytes_value()) {
    clear_has_value();
    return value_.bytes_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
 void NetworkElementProperty::set_allocated_bytes_value(::std::string* bytes_value) {
  if (!has_bytes_value()) {
    value_.bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (bytes_value != NULL) {
    set_has_bytes_value();
    value_.bytes_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        bytes_value);
  }
  // @@protoc_insertion_point(field_set_allocated:E2.NetworkElementProperty.bytes_value)
}

bool NetworkElementProperty::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void NetworkElementProperty::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
NetworkElementProperty::ValueCase NetworkElementProperty::value_case() const {
  return NetworkElementProperty::ValueCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int NetworkElementOpStateList::kOpstateFieldNumber;
#endif  // !_MSC_VER

NetworkElementOpStateList::NetworkElementOpStateList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:E2.NetworkElementOpStateList)
}

void NetworkElementOpStateList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

NetworkElementOpStateList::NetworkElementOpStateList(const NetworkElementOpStateList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:E2.NetworkElementOpStateList)
}

void NetworkElementOpStateList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

NetworkElementOpStateList::~NetworkElementOpStateList() {
  // @@protoc_insertion_point(destructor:E2.NetworkElementOpStateList)
  SharedDtor();
}

void NetworkElementOpStateList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NetworkElementOpStateList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NetworkElementOpStateList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NetworkElementOpStateList_descriptor_;
}

const NetworkElementOpStateList& NetworkElementOpStateList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_e2_5fapi_2eproto();
  return *default_instance_;
}

NetworkElementOpStateList* NetworkElementOpStateList::default_instance_ = NULL;

NetworkElementOpStateList* NetworkElementOpStateList::New(::google::protobuf::Arena* arena) const {
  NetworkElementOpStateList* n = new NetworkElementOpStateList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NetworkElementOpStateList::Clear() {
  opstate_.Clear();
}

bool NetworkElementOpStateList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E2.NetworkElementOpStateList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .E2.NetworkElementOpState opstate = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_opstate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_opstate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_opstate;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E2.NetworkElementOpStateList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E2.NetworkElementOpStateList)
  return false;
#undef DO_
}

void NetworkElementOpStateList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E2.NetworkElementOpStateList)
  // repeated .E2.NetworkElementOpState opstate = 1;
  for (unsigned int i = 0, n = this->opstate_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->opstate(i), output);
  }

  // @@protoc_insertion_point(serialize_end:E2.NetworkElementOpStateList)
}

::google::protobuf::uint8* NetworkElementOpStateList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:E2.NetworkElementOpStateList)
  // repeated .E2.NetworkElementOpState opstate = 1;
  for (unsigned int i = 0, n = this->opstate_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->opstate(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:E2.NetworkElementOpStateList)
  return target;
}

int NetworkElementOpStateList::ByteSize() const {
  int total_size = 0;

  // repeated .E2.NetworkElementOpState opstate = 1;
  total_size += 1 * this->opstate_size();
  for (int i = 0; i < this->opstate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->opstate(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NetworkElementOpStateList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NetworkElementOpStateList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NetworkElementOpStateList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NetworkElementOpStateList::MergeFrom(const NetworkElementOpStateList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  opstate_.MergeFrom(from.opstate_);
}

void NetworkElementOpStateList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkElementOpStateList::CopyFrom(const NetworkElementOpStateList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkElementOpStateList::IsInitialized() const {

  return true;
}

void NetworkElementOpStateList::Swap(NetworkElementOpStateList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetworkElementOpStateList::InternalSwap(NetworkElementOpStateList* other) {
  opstate_.UnsafeArenaSwap(&other->opstate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NetworkElementOpStateList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NetworkElementOpStateList_descriptor_;
  metadata.reflection = NetworkElementOpStateList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NetworkElementOpStateList

// repeated .E2.NetworkElementOpState opstate = 1;
int NetworkElementOpStateList::opstate_size() const {
  return opstate_.size();
}
void NetworkElementOpStateList::clear_opstate() {
  opstate_.Clear();
}
const ::E2::NetworkElementOpState& NetworkElementOpStateList::opstate(int index) const {
  // @@protoc_insertion_point(field_get:E2.NetworkElementOpStateList.opstate)
  return opstate_.Get(index);
}
::E2::NetworkElementOpState* NetworkElementOpStateList::mutable_opstate(int index) {
  // @@protoc_insertion_point(field_mutable:E2.NetworkElementOpStateList.opstate)
  return opstate_.Mutable(index);
}
::E2::NetworkElementOpState* NetworkElementOpStateList::add_opstate() {
  // @@protoc_insertion_point(field_add:E2.NetworkElementOpStateList.opstate)
  return opstate_.Add();
}
::google::protobuf::RepeatedPtrField< ::E2::NetworkElementOpState >*
NetworkElementOpStateList::mutable_opstate() {
  // @@protoc_insertion_point(field_mutable_list:E2.NetworkElementOpStateList.opstate)
  return &opstate_;
}
const ::google::protobuf::RepeatedPtrField< ::E2::NetworkElementOpState >&
NetworkElementOpStateList::opstate() const {
  // @@protoc_insertion_point(field_list:E2.NetworkElementOpStateList.opstate)
  return opstate_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ConfigurationReply::kCodeFieldNumber;
const int ConfigurationReply::kCodeStrFieldNumber;
#endif  // !_MSC_VER

ConfigurationReply::ConfigurationReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:E2.ConfigurationReply)
}

void ConfigurationReply::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ConfigurationReply::ConfigurationReply(const ConfigurationReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:E2.ConfigurationReply)
}

void ConfigurationReply::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  code_ = 0;
  code_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ConfigurationReply::~ConfigurationReply() {
  // @@protoc_insertion_point(destructor:E2.ConfigurationReply)
  SharedDtor();
}

void ConfigurationReply::SharedDtor() {
  code_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ConfigurationReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigurationReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConfigurationReply_descriptor_;
}

const ConfigurationReply& ConfigurationReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_e2_5fapi_2eproto();
  return *default_instance_;
}

ConfigurationReply* ConfigurationReply::default_instance_ = NULL;

ConfigurationReply* ConfigurationReply::New(::google::protobuf::Arena* arena) const {
  ConfigurationReply* n = new ConfigurationReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigurationReply::Clear() {
  code_ = 0;
  code_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ConfigurationReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E2.ConfigurationReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .E2.ReturnCode code = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_code(static_cast< ::E2::ReturnCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_code_str;
        break;
      }

      // optional string code_str = 2;
      case 2: {
        if (tag == 18) {
         parse_code_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code_str().data(), this->code_str().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "E2.ConfigurationReply.code_str"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E2.ConfigurationReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E2.ConfigurationReply)
  return false;
#undef DO_
}

void ConfigurationReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E2.ConfigurationReply)
  // optional .E2.ReturnCode code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // optional string code_str = 2;
  if (this->code_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code_str().data(), this->code_str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.ConfigurationReply.code_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code_str(), output);
  }

  // @@protoc_insertion_point(serialize_end:E2.ConfigurationReply)
}

::google::protobuf::uint8* ConfigurationReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:E2.ConfigurationReply)
  // optional .E2.ReturnCode code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // optional string code_str = 2;
  if (this->code_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code_str().data(), this->code_str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.ConfigurationReply.code_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code_str(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:E2.ConfigurationReply)
  return target;
}

int ConfigurationReply::ByteSize() const {
  int total_size = 0;

  // optional .E2.ReturnCode code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  // optional string code_str = 2;
  if (this->code_str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code_str());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigurationReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ConfigurationReply* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigurationReply>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ConfigurationReply::MergeFrom(const ConfigurationReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.code_str().size() > 0) {

    code_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_str_);
  }
}

void ConfigurationReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigurationReply::CopyFrom(const ConfigurationReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigurationReply::IsInitialized() const {

  return true;
}

void ConfigurationReply::Swap(ConfigurationReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigurationReply::InternalSwap(ConfigurationReply* other) {
  std::swap(code_, other->code_);
  code_str_.Swap(&other->code_str_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigurationReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConfigurationReply_descriptor_;
  metadata.reflection = ConfigurationReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigurationReply

// optional .E2.ReturnCode code = 1;
void ConfigurationReply::clear_code() {
  code_ = 0;
}
 ::E2::ReturnCode ConfigurationReply::code() const {
  // @@protoc_insertion_point(field_get:E2.ConfigurationReply.code)
  return static_cast< ::E2::ReturnCode >(code_);
}
 void ConfigurationReply::set_code(::E2::ReturnCode value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:E2.ConfigurationReply.code)
}

// optional string code_str = 2;
void ConfigurationReply::clear_code_str() {
  code_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ConfigurationReply::code_str() const {
  // @@protoc_insertion_point(field_get:E2.ConfigurationReply.code_str)
  return code_str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConfigurationReply::set_code_str(const ::std::string& value) {
  
  code_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:E2.ConfigurationReply.code_str)
}
 void ConfigurationReply::set_code_str(const char* value) {
  
  code_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:E2.ConfigurationReply.code_str)
}
 void ConfigurationReply::set_code_str(const char* value, size_t size) {
  
  code_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:E2.ConfigurationReply.code_str)
}
 ::std::string* ConfigurationReply::mutable_code_str() {
  
  // @@protoc_insertion_point(field_mutable:E2.ConfigurationReply.code_str)
  return code_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ConfigurationReply::release_code_str() {
  
  return code_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConfigurationReply::set_allocated_code_str(::std::string* code_str) {
  if (code_str != NULL) {
    
  } else {
    
  }
  code_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code_str);
  // @@protoc_insertion_point(field_set_allocated:E2.ConfigurationReply.code_str)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ServiceEndpoint::kNameFieldNumber;
const int ServiceEndpoint::kVlanIdentifierFieldNumber;
#endif  // !_MSC_VER

ServiceEndpoint::ServiceEndpoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:E2.ServiceEndpoint)
}

void ServiceEndpoint::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ServiceEndpoint::ServiceEndpoint(const ServiceEndpoint& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:E2.ServiceEndpoint)
}

void ServiceEndpoint::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vlan_identifier_ = 0u;
}

ServiceEndpoint::~ServiceEndpoint() {
  // @@protoc_insertion_point(destructor:E2.ServiceEndpoint)
  SharedDtor();
}

void ServiceEndpoint::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ServiceEndpoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceEndpoint::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceEndpoint_descriptor_;
}

const ServiceEndpoint& ServiceEndpoint::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_e2_5fapi_2eproto();
  return *default_instance_;
}

ServiceEndpoint* ServiceEndpoint::default_instance_ = NULL;

ServiceEndpoint* ServiceEndpoint::New(::google::protobuf::Arena* arena) const {
  ServiceEndpoint* n = new ServiceEndpoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceEndpoint::Clear() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vlan_identifier_ = 0u;
}

bool ServiceEndpoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E2.ServiceEndpoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "E2.ServiceEndpoint.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_vlan_identifier;
        break;
      }

      // optional uint32 vlan_identifier = 2;
      case 2: {
        if (tag == 16) {
         parse_vlan_identifier:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vlan_identifier_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E2.ServiceEndpoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E2.ServiceEndpoint)
  return false;
#undef DO_
}

void ServiceEndpoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E2.ServiceEndpoint)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.ServiceEndpoint.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 vlan_identifier = 2;
  if (this->vlan_identifier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vlan_identifier(), output);
  }

  // @@protoc_insertion_point(serialize_end:E2.ServiceEndpoint)
}

::google::protobuf::uint8* ServiceEndpoint::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:E2.ServiceEndpoint)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.ServiceEndpoint.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 vlan_identifier = 2;
  if (this->vlan_identifier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vlan_identifier(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:E2.ServiceEndpoint)
  return target;
}

int ServiceEndpoint::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional uint32 vlan_identifier = 2;
  if (this->vlan_identifier() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vlan_identifier());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceEndpoint::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServiceEndpoint* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceEndpoint>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServiceEndpoint::MergeFrom(const ServiceEndpoint& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.vlan_identifier() != 0) {
    set_vlan_identifier(from.vlan_identifier());
  }
}

void ServiceEndpoint::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceEndpoint::CopyFrom(const ServiceEndpoint& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceEndpoint::IsInitialized() const {

  return true;
}

void ServiceEndpoint::Swap(ServiceEndpoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceEndpoint::InternalSwap(ServiceEndpoint* other) {
  name_.Swap(&other->name_);
  std::swap(vlan_identifier_, other->vlan_identifier_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceEndpoint::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceEndpoint_descriptor_;
  metadata.reflection = ServiceEndpoint_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServiceEndpoint

// optional string name = 1;
void ServiceEndpoint::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ServiceEndpoint::name() const {
  // @@protoc_insertion_point(field_get:E2.ServiceEndpoint.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServiceEndpoint::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:E2.ServiceEndpoint.name)
}
 void ServiceEndpoint::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:E2.ServiceEndpoint.name)
}
 void ServiceEndpoint::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:E2.ServiceEndpoint.name)
}
 ::std::string* ServiceEndpoint::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:E2.ServiceEndpoint.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ServiceEndpoint::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServiceEndpoint::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:E2.ServiceEndpoint.name)
}

// optional uint32 vlan_identifier = 2;
void ServiceEndpoint::clear_vlan_identifier() {
  vlan_identifier_ = 0u;
}
 ::google::protobuf::uint32 ServiceEndpoint::vlan_identifier() const {
  // @@protoc_insertion_point(field_get:E2.ServiceEndpoint.vlan_identifier)
  return vlan_identifier_;
}
 void ServiceEndpoint::set_vlan_identifier(::google::protobuf::uint32 value) {
  
  vlan_identifier_ = value;
  // @@protoc_insertion_point(field_set:E2.ServiceEndpoint.vlan_identifier)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ServiceEndpointList::kListFieldNumber;
#endif  // !_MSC_VER

ServiceEndpointList::ServiceEndpointList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:E2.ServiceEndpointList)
}

void ServiceEndpointList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ServiceEndpointList::ServiceEndpointList(const ServiceEndpointList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:E2.ServiceEndpointList)
}

void ServiceEndpointList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ServiceEndpointList::~ServiceEndpointList() {
  // @@protoc_insertion_point(destructor:E2.ServiceEndpointList)
  SharedDtor();
}

void ServiceEndpointList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ServiceEndpointList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceEndpointList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceEndpointList_descriptor_;
}

const ServiceEndpointList& ServiceEndpointList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_e2_5fapi_2eproto();
  return *default_instance_;
}

ServiceEndpointList* ServiceEndpointList::default_instance_ = NULL;

ServiceEndpointList* ServiceEndpointList::New(::google::protobuf::Arena* arena) const {
  ServiceEndpointList* n = new ServiceEndpointList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceEndpointList::Clear() {
  list_.Clear();
}

bool ServiceEndpointList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E2.ServiceEndpointList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .E2.ServiceEndpoint list = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E2.ServiceEndpointList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E2.ServiceEndpointList)
  return false;
#undef DO_
}

void ServiceEndpointList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E2.ServiceEndpointList)
  // repeated .E2.ServiceEndpoint list = 1;
  for (unsigned int i = 0, n = this->list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:E2.ServiceEndpointList)
}

::google::protobuf::uint8* ServiceEndpointList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:E2.ServiceEndpointList)
  // repeated .E2.ServiceEndpoint list = 1;
  for (unsigned int i = 0, n = this->list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->list(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:E2.ServiceEndpointList)
  return target;
}

int ServiceEndpointList::ByteSize() const {
  int total_size = 0;

  // repeated .E2.ServiceEndpoint list = 1;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceEndpointList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServiceEndpointList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceEndpointList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServiceEndpointList::MergeFrom(const ServiceEndpointList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  list_.MergeFrom(from.list_);
}

void ServiceEndpointList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceEndpointList::CopyFrom(const ServiceEndpointList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceEndpointList::IsInitialized() const {

  return true;
}

void ServiceEndpointList::Swap(ServiceEndpointList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceEndpointList::InternalSwap(ServiceEndpointList* other) {
  list_.UnsafeArenaSwap(&other->list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceEndpointList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceEndpointList_descriptor_;
  metadata.reflection = ServiceEndpointList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServiceEndpointList

// repeated .E2.ServiceEndpoint list = 1;
int ServiceEndpointList::list_size() const {
  return list_.size();
}
void ServiceEndpointList::clear_list() {
  list_.Clear();
}
const ::E2::ServiceEndpoint& ServiceEndpointList::list(int index) const {
  // @@protoc_insertion_point(field_get:E2.ServiceEndpointList.list)
  return list_.Get(index);
}
::E2::ServiceEndpoint* ServiceEndpointList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:E2.ServiceEndpointList.list)
  return list_.Mutable(index);
}
::E2::ServiceEndpoint* ServiceEndpointList::add_list() {
  // @@protoc_insertion_point(field_add:E2.ServiceEndpointList.list)
  return list_.Add();
}
::google::protobuf::RepeatedPtrField< ::E2::ServiceEndpoint >*
ServiceEndpointList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:E2.ServiceEndpointList.list)
  return &list_;
}
const ::google::protobuf::RepeatedPtrField< ::E2::ServiceEndpoint >&
ServiceEndpointList::list() const {
  // @@protoc_insertion_point(field_list:E2.ServiceEndpointList.list)
  return list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ServiceBinding::kServiceFieldNumber;
const int ServiceBinding::kAccessElementFieldNumber;
const int ServiceBinding::kAccessPortListFieldNumber;
const int ServiceBinding::kEdgeElementListFieldNumber;
#endif  // !_MSC_VER

ServiceBinding::ServiceBinding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:E2.ServiceBinding)
}

void ServiceBinding::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  service_ = const_cast< ::E2::ServiceEndpoint*>(&::E2::ServiceEndpoint::default_instance());
  access_element_ = const_cast< ::E2::NetworkElement*>(&::E2::NetworkElement::default_instance());
  edge_element_list_ = const_cast< ::E2::NetworkElementList*>(&::E2::NetworkElementList::default_instance());
}

ServiceBinding::ServiceBinding(const ServiceBinding& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:E2.ServiceBinding)
}

void ServiceBinding::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  service_ = NULL;
  access_element_ = NULL;
  edge_element_list_ = NULL;
}

ServiceBinding::~ServiceBinding() {
  // @@protoc_insertion_point(destructor:E2.ServiceBinding)
  SharedDtor();
}

void ServiceBinding::SharedDtor() {
  if (this != default_instance_) {
    delete service_;
    delete access_element_;
    delete edge_element_list_;
  }
}

void ServiceBinding::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceBinding::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceBinding_descriptor_;
}

const ServiceBinding& ServiceBinding::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_e2_5fapi_2eproto();
  return *default_instance_;
}

ServiceBinding* ServiceBinding::default_instance_ = NULL;

ServiceBinding* ServiceBinding::New(::google::protobuf::Arena* arena) const {
  ServiceBinding* n = new ServiceBinding;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceBinding::Clear() {
  if (GetArenaNoVirtual() == NULL && service_ != NULL) delete service_;
  service_ = NULL;
  if (GetArenaNoVirtual() == NULL && access_element_ != NULL) delete access_element_;
  access_element_ = NULL;
  if (GetArenaNoVirtual() == NULL && edge_element_list_ != NULL) delete edge_element_list_;
  edge_element_list_ = NULL;
  access_port_list_.Clear();
}

bool ServiceBinding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E2.ServiceBinding)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .E2.ServiceEndpoint service = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_service()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_access_element;
        break;
      }

      // optional .E2.NetworkElement access_element = 2;
      case 2: {
        if (tag == 18) {
         parse_access_element:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_access_element()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_access_port_list;
        break;
      }

      // repeated string access_port_list = 3;
      case 3: {
        if (tag == 26) {
         parse_access_port_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_access_port_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->access_port_list(this->access_port_list_size() - 1).data(),
            this->access_port_list(this->access_port_list_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "E2.ServiceBinding.access_port_list"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_access_port_list;
        if (input->ExpectTag(34)) goto parse_edge_element_list;
        break;
      }

      // optional .E2.NetworkElementList edge_element_list = 4;
      case 4: {
        if (tag == 34) {
         parse_edge_element_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_edge_element_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E2.ServiceBinding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E2.ServiceBinding)
  return false;
#undef DO_
}

void ServiceBinding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E2.ServiceBinding)
  // optional .E2.ServiceEndpoint service = 1;
  if (this->has_service()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->service_, output);
  }

  // optional .E2.NetworkElement access_element = 2;
  if (this->has_access_element()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->access_element_, output);
  }

  // repeated string access_port_list = 3;
  for (int i = 0; i < this->access_port_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_port_list(i).data(), this->access_port_list(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.ServiceBinding.access_port_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->access_port_list(i), output);
  }

  // optional .E2.NetworkElementList edge_element_list = 4;
  if (this->has_edge_element_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->edge_element_list_, output);
  }

  // @@protoc_insertion_point(serialize_end:E2.ServiceBinding)
}

::google::protobuf::uint8* ServiceBinding::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:E2.ServiceBinding)
  // optional .E2.ServiceEndpoint service = 1;
  if (this->has_service()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->service_, target);
  }

  // optional .E2.NetworkElement access_element = 2;
  if (this->has_access_element()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->access_element_, target);
  }

  // repeated string access_port_list = 3;
  for (int i = 0; i < this->access_port_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_port_list(i).data(), this->access_port_list(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "E2.ServiceBinding.access_port_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->access_port_list(i), target);
  }

  // optional .E2.NetworkElementList edge_element_list = 4;
  if (this->has_edge_element_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->edge_element_list_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:E2.ServiceBinding)
  return target;
}

int ServiceBinding::ByteSize() const {
  int total_size = 0;

  // optional .E2.ServiceEndpoint service = 1;
  if (this->has_service()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->service_);
  }

  // optional .E2.NetworkElement access_element = 2;
  if (this->has_access_element()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->access_element_);
  }

  // optional .E2.NetworkElementList edge_element_list = 4;
  if (this->has_edge_element_list()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->edge_element_list_);
  }

  // repeated string access_port_list = 3;
  total_size += 1 * this->access_port_list_size();
  for (int i = 0; i < this->access_port_list_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->access_port_list(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceBinding::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServiceBinding* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceBinding>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServiceBinding::MergeFrom(const ServiceBinding& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  access_port_list_.MergeFrom(from.access_port_list_);
  if (from.has_service()) {
    mutable_service()->::E2::ServiceEndpoint::MergeFrom(from.service());
  }
  if (from.has_access_element()) {
    mutable_access_element()->::E2::NetworkElement::MergeFrom(from.access_element());
  }
  if (from.has_edge_element_list()) {
    mutable_edge_element_list()->::E2::NetworkElementList::MergeFrom(from.edge_element_list());
  }
}

void ServiceBinding::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceBinding::CopyFrom(const ServiceBinding& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceBinding::IsInitialized() const {

  return true;
}

void ServiceBinding::Swap(ServiceBinding* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceBinding::InternalSwap(ServiceBinding* other) {
  std::swap(service_, other->service_);
  std::swap(access_element_, other->access_element_);
  access_port_list_.UnsafeArenaSwap(&other->access_port_list_);
  std::swap(edge_element_list_, other->edge_element_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceBinding::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceBinding_descriptor_;
  metadata.reflection = ServiceBinding_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServiceBinding

// optional .E2.ServiceEndpoint service = 1;
bool ServiceBinding::has_service() const {
  return !_is_default_instance_ && service_ != NULL;
}
void ServiceBinding::clear_service() {
  if (GetArenaNoVirtual() == NULL && service_ != NULL) delete service_;
  service_ = NULL;
}
const ::E2::ServiceEndpoint& ServiceBinding::service() const {
  // @@protoc_insertion_point(field_get:E2.ServiceBinding.service)
  return service_ != NULL ? *service_ : *default_instance_->service_;
}
::E2::ServiceEndpoint* ServiceBinding::mutable_service() {
  
  if (service_ == NULL) {
    service_ = new ::E2::ServiceEndpoint;
  }
  // @@protoc_insertion_point(field_mutable:E2.ServiceBinding.service)
  return service_;
}
::E2::ServiceEndpoint* ServiceBinding::release_service() {
  
  ::E2::ServiceEndpoint* temp = service_;
  service_ = NULL;
  return temp;
}
void ServiceBinding::set_allocated_service(::E2::ServiceEndpoint* service) {
  delete service_;
  service_ = service;
  if (service) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:E2.ServiceBinding.service)
}

// optional .E2.NetworkElement access_element = 2;
bool ServiceBinding::has_access_element() const {
  return !_is_default_instance_ && access_element_ != NULL;
}
void ServiceBinding::clear_access_element() {
  if (GetArenaNoVirtual() == NULL && access_element_ != NULL) delete access_element_;
  access_element_ = NULL;
}
const ::E2::NetworkElement& ServiceBinding::access_element() const {
  // @@protoc_insertion_point(field_get:E2.ServiceBinding.access_element)
  return access_element_ != NULL ? *access_element_ : *default_instance_->access_element_;
}
::E2::NetworkElement* ServiceBinding::mutable_access_element() {
  
  if (access_element_ == NULL) {
    access_element_ = new ::E2::NetworkElement;
  }
  // @@protoc_insertion_point(field_mutable:E2.ServiceBinding.access_element)
  return access_element_;
}
::E2::NetworkElement* ServiceBinding::release_access_element() {
  
  ::E2::NetworkElement* temp = access_element_;
  access_element_ = NULL;
  return temp;
}
void ServiceBinding::set_allocated_access_element(::E2::NetworkElement* access_element) {
  delete access_element_;
  access_element_ = access_element;
  if (access_element) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:E2.ServiceBinding.access_element)
}

// repeated string access_port_list = 3;
int ServiceBinding::access_port_list_size() const {
  return access_port_list_.size();
}
void ServiceBinding::clear_access_port_list() {
  access_port_list_.Clear();
}
 const ::std::string& ServiceBinding::access_port_list(int index) const {
  // @@protoc_insertion_point(field_get:E2.ServiceBinding.access_port_list)
  return access_port_list_.Get(index);
}
 ::std::string* ServiceBinding::mutable_access_port_list(int index) {
  // @@protoc_insertion_point(field_mutable:E2.ServiceBinding.access_port_list)
  return access_port_list_.Mutable(index);
}
 void ServiceBinding::set_access_port_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:E2.ServiceBinding.access_port_list)
  access_port_list_.Mutable(index)->assign(value);
}
 void ServiceBinding::set_access_port_list(int index, const char* value) {
  access_port_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:E2.ServiceBinding.access_port_list)
}
 void ServiceBinding::set_access_port_list(int index, const char* value, size_t size) {
  access_port_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:E2.ServiceBinding.access_port_list)
}
 ::std::string* ServiceBinding::add_access_port_list() {
  return access_port_list_.Add();
}
 void ServiceBinding::add_access_port_list(const ::std::string& value) {
  access_port_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:E2.ServiceBinding.access_port_list)
}
 void ServiceBinding::add_access_port_list(const char* value) {
  access_port_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:E2.ServiceBinding.access_port_list)
}
 void ServiceBinding::add_access_port_list(const char* value, size_t size) {
  access_port_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:E2.ServiceBinding.access_port_list)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
ServiceBinding::access_port_list() const {
  // @@protoc_insertion_point(field_list:E2.ServiceBinding.access_port_list)
  return access_port_list_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
ServiceBinding::mutable_access_port_list() {
  // @@protoc_insertion_point(field_mutable_list:E2.ServiceBinding.access_port_list)
  return &access_port_list_;
}

// optional .E2.NetworkElementList edge_element_list = 4;
bool ServiceBinding::has_edge_element_list() const {
  return !_is_default_instance_ && edge_element_list_ != NULL;
}
void ServiceBinding::clear_edge_element_list() {
  if (GetArenaNoVirtual() == NULL && edge_element_list_ != NULL) delete edge_element_list_;
  edge_element_list_ = NULL;
}
const ::E2::NetworkElementList& ServiceBinding::edge_element_list() const {
  // @@protoc_insertion_point(field_get:E2.ServiceBinding.edge_element_list)
  return edge_element_list_ != NULL ? *edge_element_list_ : *default_instance_->edge_element_list_;
}
::E2::NetworkElementList* ServiceBinding::mutable_edge_element_list() {
  
  if (edge_element_list_ == NULL) {
    edge_element_list_ = new ::E2::NetworkElementList;
  }
  // @@protoc_insertion_point(field_mutable:E2.ServiceBinding.edge_element_list)
  return edge_element_list_;
}
::E2::NetworkElementList* ServiceBinding::release_edge_element_list() {
  
  ::E2::NetworkElementList* temp = edge_element_list_;
  edge_element_list_ = NULL;
  return temp;
}
void ServiceBinding::set_allocated_edge_element_list(::E2::NetworkElementList* edge_element_list) {
  delete edge_element_list_;
  edge_element_list_ = edge_element_list;
  if (edge_element_list) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:E2.ServiceBinding.edge_element_list)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace E2

// @@protoc_insertion_point(global_scope)
