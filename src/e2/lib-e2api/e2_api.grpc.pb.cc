// Generated by the gRPC protobuf plugin.
// If you make any local change, they will be lost.
// source: e2_api.proto

#include "e2_api.pb.h"
#include "e2_api.grpc.pb.h"

#include <grpc++/channel.h>
#include <grpc++/impl/client_unary_call.h>
#include <grpc++/impl/rpc_service_method.h>
#include <grpc++/impl/service_type.h>
#include <grpc++/support/async_unary_call.h>
#include <grpc++/support/async_stream.h>
#include <grpc++/support/sync_stream.h>
namespace E2 {

static const char* E2_method_names[] = {
  "/E2.E2/addElement",
  "/E2.E2/removeElement",
  "/E2.E2/getElements",
  "/E2.E2/addFabricLink",
  "/E2.E2/removeFabricLink",
  "/E2.E2/addServiceEndpoint",
  "/E2.E2/removeServiceEndpoint",
  "/E2.E2/activateService",
  "/E2.E2/deactivateService",
};

std::unique_ptr< E2::Stub> E2::NewStub(const std::shared_ptr< ::grpc::Channel>& channel, const ::grpc::StubOptions& options) {
  std::unique_ptr< E2::Stub> stub(new E2::Stub(channel));
  return stub;
}

E2::Stub::Stub(const std::shared_ptr< ::grpc::Channel>& channel)
  : channel_(channel), rpcmethod_addElement_(E2_method_names[0], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_removeElement_(E2_method_names[1], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getElements_(E2_method_names[2], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_addFabricLink_(E2_method_names[3], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_removeFabricLink_(E2_method_names[4], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_addServiceEndpoint_(E2_method_names[5], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_removeServiceEndpoint_(E2_method_names[6], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_activateService_(E2_method_names[7], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_deactivateService_(E2_method_names[8], ::grpc::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status E2::Stub::addElement(::grpc::ClientContext* context, const ::E2::NetworkElementList& request, ::E2::ConfigurationReply* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_addElement_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::E2::ConfigurationReply>* E2::Stub::AsyncaddElementRaw(::grpc::ClientContext* context, const ::E2::NetworkElementList& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::E2::ConfigurationReply>(channel_.get(), cq, rpcmethod_addElement_, context, request);
}

::grpc::Status E2::Stub::removeElement(::grpc::ClientContext* context, const ::E2::NetworkElementList& request, ::E2::ConfigurationReply* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_removeElement_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::E2::ConfigurationReply>* E2::Stub::AsyncremoveElementRaw(::grpc::ClientContext* context, const ::E2::NetworkElementList& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::E2::ConfigurationReply>(channel_.get(), cq, rpcmethod_removeElement_, context, request);
}

::grpc::Status E2::Stub::getElements(::grpc::ClientContext* context, const ::E2::NetworkElement& request, ::E2::NetworkElementOpStateList* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_getElements_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::E2::NetworkElementOpStateList>* E2::Stub::AsyncgetElementsRaw(::grpc::ClientContext* context, const ::E2::NetworkElement& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::E2::NetworkElementOpStateList>(channel_.get(), cq, rpcmethod_getElements_, context, request);
}

::grpc::Status E2::Stub::addFabricLink(::grpc::ClientContext* context, const ::E2::FabricLinkList& request, ::E2::ConfigurationReply* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_addFabricLink_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::E2::ConfigurationReply>* E2::Stub::AsyncaddFabricLinkRaw(::grpc::ClientContext* context, const ::E2::FabricLinkList& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::E2::ConfigurationReply>(channel_.get(), cq, rpcmethod_addFabricLink_, context, request);
}

::grpc::Status E2::Stub::removeFabricLink(::grpc::ClientContext* context, const ::E2::FabricLinkList& request, ::E2::ConfigurationReply* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_removeFabricLink_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::E2::ConfigurationReply>* E2::Stub::AsyncremoveFabricLinkRaw(::grpc::ClientContext* context, const ::E2::FabricLinkList& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::E2::ConfigurationReply>(channel_.get(), cq, rpcmethod_removeFabricLink_, context, request);
}

::grpc::Status E2::Stub::addServiceEndpoint(::grpc::ClientContext* context, const ::E2::ServiceEndpointList& request, ::E2::ConfigurationReply* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_addServiceEndpoint_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::E2::ConfigurationReply>* E2::Stub::AsyncaddServiceEndpointRaw(::grpc::ClientContext* context, const ::E2::ServiceEndpointList& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::E2::ConfigurationReply>(channel_.get(), cq, rpcmethod_addServiceEndpoint_, context, request);
}

::grpc::Status E2::Stub::removeServiceEndpoint(::grpc::ClientContext* context, const ::E2::ServiceEndpointList& request, ::E2::ConfigurationReply* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_removeServiceEndpoint_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::E2::ConfigurationReply>* E2::Stub::AsyncremoveServiceEndpointRaw(::grpc::ClientContext* context, const ::E2::ServiceEndpointList& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::E2::ConfigurationReply>(channel_.get(), cq, rpcmethod_removeServiceEndpoint_, context, request);
}

::grpc::Status E2::Stub::activateService(::grpc::ClientContext* context, const ::E2::ServicePlacementRequest& request, ::E2::ConfigurationReply* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_activateService_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::E2::ConfigurationReply>* E2::Stub::AsyncactivateServiceRaw(::grpc::ClientContext* context, const ::E2::ServicePlacementRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::E2::ConfigurationReply>(channel_.get(), cq, rpcmethod_activateService_, context, request);
}

::grpc::Status E2::Stub::deactivateService(::grpc::ClientContext* context, const ::E2::ServicePlacementRequest& request, ::E2::ConfigurationReply* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_deactivateService_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::E2::ConfigurationReply>* E2::Stub::AsyncdeactivateServiceRaw(::grpc::ClientContext* context, const ::E2::ServicePlacementRequest& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::E2::ConfigurationReply>(channel_.get(), cq, rpcmethod_deactivateService_, context, request);
}

E2::AsyncService::AsyncService() : ::grpc::AsynchronousService(E2_method_names, 9) {}

E2::Service::~Service() {
  delete service_;
}

::grpc::Status E2::Service::addElement(::grpc::ServerContext* context, const ::E2::NetworkElementList* request, ::E2::ConfigurationReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

void E2::AsyncService::RequestaddElement(::grpc::ServerContext* context, ::E2::NetworkElementList* request, ::grpc::ServerAsyncResponseWriter< ::E2::ConfigurationReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
  AsynchronousService::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
}

::grpc::Status E2::Service::removeElement(::grpc::ServerContext* context, const ::E2::NetworkElementList* request, ::E2::ConfigurationReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

void E2::AsyncService::RequestremoveElement(::grpc::ServerContext* context, ::E2::NetworkElementList* request, ::grpc::ServerAsyncResponseWriter< ::E2::ConfigurationReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
  AsynchronousService::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
}

::grpc::Status E2::Service::getElements(::grpc::ServerContext* context, const ::E2::NetworkElement* request, ::E2::NetworkElementOpStateList* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

void E2::AsyncService::RequestgetElements(::grpc::ServerContext* context, ::E2::NetworkElement* request, ::grpc::ServerAsyncResponseWriter< ::E2::NetworkElementOpStateList>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
  AsynchronousService::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
}

::grpc::Status E2::Service::addFabricLink(::grpc::ServerContext* context, const ::E2::FabricLinkList* request, ::E2::ConfigurationReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

void E2::AsyncService::RequestaddFabricLink(::grpc::ServerContext* context, ::E2::FabricLinkList* request, ::grpc::ServerAsyncResponseWriter< ::E2::ConfigurationReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
  AsynchronousService::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
}

::grpc::Status E2::Service::removeFabricLink(::grpc::ServerContext* context, const ::E2::FabricLinkList* request, ::E2::ConfigurationReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

void E2::AsyncService::RequestremoveFabricLink(::grpc::ServerContext* context, ::E2::FabricLinkList* request, ::grpc::ServerAsyncResponseWriter< ::E2::ConfigurationReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
  AsynchronousService::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
}

::grpc::Status E2::Service::addServiceEndpoint(::grpc::ServerContext* context, const ::E2::ServiceEndpointList* request, ::E2::ConfigurationReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

void E2::AsyncService::RequestaddServiceEndpoint(::grpc::ServerContext* context, ::E2::ServiceEndpointList* request, ::grpc::ServerAsyncResponseWriter< ::E2::ConfigurationReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
  AsynchronousService::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
}

::grpc::Status E2::Service::removeServiceEndpoint(::grpc::ServerContext* context, const ::E2::ServiceEndpointList* request, ::E2::ConfigurationReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

void E2::AsyncService::RequestremoveServiceEndpoint(::grpc::ServerContext* context, ::E2::ServiceEndpointList* request, ::grpc::ServerAsyncResponseWriter< ::E2::ConfigurationReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
  AsynchronousService::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
}

::grpc::Status E2::Service::activateService(::grpc::ServerContext* context, const ::E2::ServicePlacementRequest* request, ::E2::ConfigurationReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

void E2::AsyncService::RequestactivateService(::grpc::ServerContext* context, ::E2::ServicePlacementRequest* request, ::grpc::ServerAsyncResponseWriter< ::E2::ConfigurationReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
  AsynchronousService::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
}

::grpc::Status E2::Service::deactivateService(::grpc::ServerContext* context, const ::E2::ServicePlacementRequest* request, ::E2::ConfigurationReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

void E2::AsyncService::RequestdeactivateService(::grpc::ServerContext* context, ::E2::ServicePlacementRequest* request, ::grpc::ServerAsyncResponseWriter< ::E2::ConfigurationReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
  AsynchronousService::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
}

::grpc::RpcService* E2::Service::service() {
  if (service_ != nullptr) {
    return service_;
  }
  service_ = new ::grpc::RpcService();
  service_->AddMethod(new ::grpc::RpcServiceMethod(
      E2_method_names[0],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< E2::Service, ::E2::NetworkElementList, ::E2::ConfigurationReply>(
          std::mem_fn(&E2::Service::addElement), this)));
  service_->AddMethod(new ::grpc::RpcServiceMethod(
      E2_method_names[1],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< E2::Service, ::E2::NetworkElementList, ::E2::ConfigurationReply>(
          std::mem_fn(&E2::Service::removeElement), this)));
  service_->AddMethod(new ::grpc::RpcServiceMethod(
      E2_method_names[2],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< E2::Service, ::E2::NetworkElement, ::E2::NetworkElementOpStateList>(
          std::mem_fn(&E2::Service::getElements), this)));
  service_->AddMethod(new ::grpc::RpcServiceMethod(
      E2_method_names[3],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< E2::Service, ::E2::FabricLinkList, ::E2::ConfigurationReply>(
          std::mem_fn(&E2::Service::addFabricLink), this)));
  service_->AddMethod(new ::grpc::RpcServiceMethod(
      E2_method_names[4],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< E2::Service, ::E2::FabricLinkList, ::E2::ConfigurationReply>(
          std::mem_fn(&E2::Service::removeFabricLink), this)));
  service_->AddMethod(new ::grpc::RpcServiceMethod(
      E2_method_names[5],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< E2::Service, ::E2::ServiceEndpointList, ::E2::ConfigurationReply>(
          std::mem_fn(&E2::Service::addServiceEndpoint), this)));
  service_->AddMethod(new ::grpc::RpcServiceMethod(
      E2_method_names[6],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< E2::Service, ::E2::ServiceEndpointList, ::E2::ConfigurationReply>(
          std::mem_fn(&E2::Service::removeServiceEndpoint), this)));
  service_->AddMethod(new ::grpc::RpcServiceMethod(
      E2_method_names[7],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< E2::Service, ::E2::ServicePlacementRequest, ::E2::ConfigurationReply>(
          std::mem_fn(&E2::Service::activateService), this)));
  service_->AddMethod(new ::grpc::RpcServiceMethod(
      E2_method_names[8],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< E2::Service, ::E2::ServicePlacementRequest, ::E2::ConfigurationReply>(
          std::mem_fn(&E2::Service::deactivateService), this)));
  return service_;
}


}  // namespace E2

